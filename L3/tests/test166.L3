define @main () {
 
:EntryPoint
 %len <- 10
 %arr <- call @GetArray (%len)
 call print (%arr)
 %res <- call @FindPeak (%arr, %len)
 call @PrintResult (%res)
 return 
}

define @GetArray (%len) {
 
:EntryPoint
 %len <- %len << 1
 %len <- %len + 1
 %newVar1 <- %len >> 1
 %newVar0 <- %newVar1
 %newVar0 <- %newVar0 << 1
 %newVar0 <- %newVar0 + 1
 %newVar0 <- %newVar0 + 4
 %arr <- call allocate (%newVar0, 1)
 %newVar2 <- %arr + 8
 store %newVar2 <- 3
 %newVar3 <- %arr + 16
 store %newVar3 <- %len
 %x <- 1
 %x <- %x << 1
 %x <- %x + 1
 %newVar5 <- 0
 %newVar6 <- 1
 %newVar5 <- %newVar5 + 0
 %newVar4 <- %newVar5 * 8
 %newVar4 <- %newVar4 + 24
 %newVar7 <- %arr + %newVar4
 store %newVar7 <- %x
 %x <- 2
 %x <- %x << 1
 %x <- %x + 1
 %newVar9 <- 0
 %newVar10 <- 1
 %newVar9 <- %newVar9 + 1
 %newVar8 <- %newVar9 * 8
 %newVar8 <- %newVar8 + 24
 %newVar11 <- %arr + %newVar8
 store %newVar11 <- %x
 %x <- 3
 %x <- %x << 1
 %x <- %x + 1
 %newVar13 <- 0
 %newVar14 <- 1
 %newVar13 <- %newVar13 + 2
 %newVar12 <- %newVar13 * 8
 %newVar12 <- %newVar12 + 24
 %newVar15 <- %arr + %newVar12
 store %newVar15 <- %x
 %x <- 5
 %x <- %x << 1
 %x <- %x + 1
 %newVar17 <- 0
 %newVar18 <- 1
 %newVar17 <- %newVar17 + 3
 %newVar16 <- %newVar17 * 8
 %newVar16 <- %newVar16 + 24
 %newVar19 <- %arr + %newVar16
 store %newVar19 <- %x
 %x <- 1
 %x <- %x << 1
 %x <- %x + 1
 %newVar21 <- 0
 %newVar22 <- 1
 %newVar21 <- %newVar21 + 4
 %newVar20 <- %newVar21 * 8
 %newVar20 <- %newVar20 + 24
 %newVar23 <- %arr + %newVar20
 store %newVar23 <- %x
 %x <- 3
 %x <- %x << 1
 %x <- %x + 1
 %newVar25 <- 0
 %newVar26 <- 1
 %newVar25 <- %newVar25 + 5
 %newVar24 <- %newVar25 * 8
 %newVar24 <- %newVar24 + 24
 %newVar27 <- %arr + %newVar24
 store %newVar27 <- %x
 %x <- 2
 %x <- %x << 1
 %x <- %x + 1
 %newVar29 <- 0
 %newVar30 <- 1
 %newVar29 <- %newVar29 + 6
 %newVar28 <- %newVar29 * 8
 %newVar28 <- %newVar28 + 24
 %newVar31 <- %arr + %newVar28
 store %newVar31 <- %x
 %x <- 10
 %x <- %x << 1
 %x <- %x + 1
 %newVar33 <- 0
 %newVar34 <- 1
 %newVar33 <- %newVar33 + 7
 %newVar32 <- %newVar33 * 8
 %newVar32 <- %newVar32 + 24
 %newVar35 <- %arr + %newVar32
 store %newVar35 <- %x
 %x <- 11
 %x <- %x << 1
 %x <- %x + 1
 %newVar37 <- 0
 %newVar38 <- 1
 %newVar37 <- %newVar37 + 8
 %newVar36 <- %newVar37 * 8
 %newVar36 <- %newVar36 + 24
 %newVar39 <- %arr + %newVar36
 store %newVar39 <- %x
 %x <- 8
 %x <- %x << 1
 %x <- %x + 1
 %newVar41 <- 0
 %newVar42 <- 1
 %newVar41 <- %newVar41 + 9
 %newVar40 <- %newVar41 * 8
 %newVar40 <- %newVar40 + 24
 %newVar43 <- %arr + %newVar40
 store %newVar43 <- %x
 return %arr
}

define @FindPeak (%arr, %len) {
 
:EntryPoint
 %max <- 0
 %ind <- 0
 br :LoopStart
 
:LoopStart
 %loopEnded <- %ind >= %len
 br %loopEnded :LoopEnd 
 br :LoopContinue
 
:LoopContinue
 %newVar1 <- 0
 %newVar2 <- 1
 %newVar1 <- %newVar1 + %ind
 %newVar0 <- %newVar1 * 8
 %newVar0 <- %newVar0 + 24
 %newVar3 <- %arr + %newVar0
 %cur <- load %newVar3
 %notMax <- %max >= %cur
 br %notMax :Continue 
 br :SetMax
 
:SetMax
 %max <- %cur
 br :Continue
 
:Continue
 %ind <- %ind + 1
 br :LoopStart
 
:LoopEnd
 return %max
}

define @PrintResult (%res) {
 
:EntryPoint
 call print (%res)
 return 
}

