define @main () {
 
:entryPoint
 %x <- 3
 %y <- 3
 %result1 <- call @findGCD (%x, %y)
 %x2 <- 30
 %y2 <- 50
 %result2 <- call @findGCD (%x2, %y2)
 %x3 <- 75
 %y3 <- 80
 %result3 <- call @findGCD (%x3, %y3)
 return 
}

define @findGCD (%a, %b) {
 
:TestNumbers
 %isLesser <- %a < %b
 br %isLesser :Lesser 
 br :NotLesser
 
:NotLesser
 %isEqual <- %a = %b
 br %isEqual :Equal 
 br :Greater
 
:Greater
 %a <- %a - %b
 call @printResult (%a, %b)
 call @findGCD (%a, %b)
 br :Finished
 
:Lesser
 %b <- %b - %a
 call @printResult (%a, %b)
 call @findGCD (%a, %b)
 br :Finished
 
:Equal
 call @printResult (%a, %b)
 br :Finished
 
:Finished
 return 
}

define @printResult (%a, %b) {
 
:Entrypoint
 %a <- %a << 1
 %a <- %a + 1
 call print (%a)
 %b <- %b << 1
 %b <- %b + 1
 call print (%b)
 return 
}

