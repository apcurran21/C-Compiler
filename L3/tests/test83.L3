define @mod (%x, %y) {
 
:entry
 %r <- %x = 0
 br %r :mgood 
 br :misneg
 
:misneg
 %r <- %x > -1
 br %r :mloop 
 br :ret_early
 
:ret_early
 return 0
 
:mloop
 %x <- %x - %y
 %r <- %x = 0
 br %r :mgood 
 br :misneg
 
:mgood
 return 1
}

define @mod_sum (%x) {
 
:entry
 %original <- %x
 %sum <- 0
 %processing <- 0
 br :sumloop
 
:sumloop
 %processing <- %processing + 1
 %r <- %original <= %processing
 br %r :done 
 br :notdone0
 
:notdone0
 %isMod <- call @mod (%processing, 3)
 br %isMod :dosum 
 br :notdone1
 
:notdone1
 %isMod <- call @mod (%processing, 5)
 %r <- %isMod = 0
 br %r :sumloop 
 br :dosum
 
:dosum
 %sum <- %sum + %processing
 br :sumloop
 
:done
 return %sum
}

define @main () {
 
:entry
 %v <- call @mod_sum (1000)
 %v <- %v << 1
 %v <- %v + 1
 call print (%v)
 return 
}

