// gcd
// contains recursive calls
define @main() {
    %res <- call @gcd(541, 7919)
    %res <- %res << 1
    %res <- %res + 1
    call print(%res)
    return 0
}

define @gcd(%a, %b) {
    %if <- %b = 0
    br %if :initialCondition
    
    %aModB <- call @mod(%a, %b)
    %res <- call @gcd(%b, %aModB)
    return %res
    
    :initialCondition
    return %a
}

define @mod(%a, %b) {
    %i <- 0
    %res <- %a
    
    :while
        %bi <- %b * %i
        %if <- %bi <= %a
        br %if :whileInto
        return %res
        
        :whileInto
        %res <- %a
        %res <- %res - %bi
        %i <- %i + 1
        br :while
}
