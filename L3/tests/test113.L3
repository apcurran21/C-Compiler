define @main () {
 
:entry
 %num_triangular_nums <- 21
 call print (%num_triangular_nums)
 call @compute_triangular_num (%num_triangular_nums)
 call @compute_many_tns (%num_triangular_nums)
 return 
}

define @compute_triangular_num (%nums) {
 
:entry
 %decoded_nums <- %nums >> 1
 %temp_1 <- %decoded_nums - 1
 %temp_1 <- %temp_1 * %decoded_nums
 %temp_1 <- %temp_1 >> 1
 %temp_1 <- %temp_1 << 1
 %temp_1 <- %temp_1 + 1
 call print (%temp_1)
 return 
}

define @compute_many_tns (%nums) {
 
:entry
 %decoded_nums <- %nums >> 1
 %nth_tn <- 3
 %nth_tn <- %nth_tn >> 1
 br :tn_preheader
 
:tn_preheader
 %cond <- %nth_tn > %decoded_nums
 br %cond :tn_exit 
 br :tn_body
 
:tn_body
 %call_nth_tn <- %nth_tn << 1
 %call_nth_tn <- %call_nth_tn + 1
 call @compute_triangular_num (%call_nth_tn)
 br :tn_latch
 
:tn_latch
 %nth_tn <- %nth_tn + 1
 br :tn_preheader
 
:tn_exit
 return 
}

