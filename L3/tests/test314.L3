define @main () {
 
:NNNNNN
 br :entry
 
:entry
 %v <- 21
 %newVar1 <- 21 >> 1
 %newVar0 <- %newVar1
 %newVar2 <- 21 >> 1
 %newVar0 <- %newVar0 * %newVar2
 %newVar0 <- %newVar0 << 1
 %newVar0 <- %newVar0 + 1
 %newVar0 <- %newVar0 + 4
 %m <- call allocate (%newVar0, 1)
 %newVar3 <- %m + 8
 store %newVar3 <- 21
 %newVar4 <- %m + 16
 store %newVar4 <- 21
 %r <- call @checkMatrix (%m, %v)
 call print (%r)
 %newVar6 <- 0
 %newVar7 <- %m + 16
 %newVar8 <- load %newVar7
 %newVar9 <- %newVar8 >> 1
 %newVar10 <- 1
 %newVar10 <- %newVar9 * %newVar10
 %newVar11 <- 0 * %newVar10
 %newVar6 <- %newVar11 + %newVar6
 %newVar6 <- %newVar6 + 0
 %newVar5 <- %newVar6 * 8
 %newVar5 <- %newVar5 + 24
 %newVar12 <- %m + %newVar5
 store %newVar12 <- %v
 %r <- call @checkMatrix (%m, %v)
 call print (%r)
 %newVar14 <- 0
 %newVar15 <- %m + 16
 %newVar16 <- load %newVar15
 %newVar17 <- %newVar16 >> 1
 %newVar18 <- 1
 %newVar18 <- %newVar17 * %newVar18
 %newVar19 <- 0 * %newVar18
 %newVar14 <- %newVar19 + %newVar14
 %newVar14 <- %newVar14 + 1
 %newVar13 <- %newVar14 * 8
 %newVar13 <- %newVar13 + 24
 %newVar20 <- %m + %newVar13
 store %newVar20 <- %v
 %r <- call @checkMatrix (%m, %v)
 call print (%r)
 %newVar22 <- 0
 %newVar23 <- %m + 16
 %newVar24 <- load %newVar23
 %newVar25 <- %newVar24 >> 1
 %newVar26 <- 1
 %newVar26 <- %newVar25 * %newVar26
 %newVar27 <- 1 * %newVar26
 %newVar22 <- %newVar27 + %newVar22
 %newVar22 <- %newVar22 + 0
 %newVar21 <- %newVar22 * 8
 %newVar21 <- %newVar21 + 24
 %newVar28 <- %m + %newVar21
 store %newVar28 <- %v
 %r <- call @checkMatrix (%m, %v)
 call print (%r)
 %newVar30 <- 0
 %newVar31 <- %m + 16
 %newVar32 <- load %newVar31
 %newVar33 <- %newVar32 >> 1
 %newVar34 <- 1
 %newVar34 <- %newVar33 * %newVar34
 %newVar35 <- 3 * %newVar34
 %newVar30 <- %newVar35 + %newVar30
 %newVar30 <- %newVar30 + 0
 %newVar29 <- %newVar30 * 8
 %newVar29 <- %newVar29 + 24
 %newVar36 <- %m + %newVar29
 store %newVar36 <- %v
 %r <- call @checkMatrix (%m, %v)
 call print (%r)
 %newVar38 <- 0
 %newVar39 <- %m + 16
 %newVar40 <- load %newVar39
 %newVar41 <- %newVar40 >> 1
 %newVar42 <- 1
 %newVar42 <- %newVar41 * %newVar42
 %newVar43 <- 3 * %newVar42
 %newVar38 <- %newVar43 + %newVar38
 %newVar38 <- %newVar38 + 1
 %newVar37 <- %newVar38 * 8
 %newVar37 <- %newVar37 + 24
 %newVar44 <- %m + %newVar37
 store %newVar44 <- %v
 %r <- call @checkMatrix (%m, %v)
 call print (%r)
 %newVar46 <- 0
 %newVar47 <- %m + 16
 %newVar48 <- load %newVar47
 %newVar49 <- %newVar48 >> 1
 %newVar50 <- 1
 %newVar50 <- %newVar49 * %newVar50
 %newVar51 <- 3 * %newVar50
 %newVar46 <- %newVar51 + %newVar46
 %newVar46 <- %newVar46 + 3
 %newVar45 <- %newVar46 * 8
 %newVar45 <- %newVar45 + 24
 %newVar52 <- %m + %newVar45
 store %newVar52 <- %v
 %r <- call @checkMatrix (%m, %v)
 call print (%r)
 return 
}

define @checkMatrix (%m, %v) {
 
:NNNNNNNNNNNNN
 br :entry
 
:leave
 return %found
 
:setAndLeave
 %found <- 3
 br :leave
 
:endOuterBody
 %index <- %index + 1
 br :header
 
:header
 %check <- %index < %l1
 br %check :outerBody 
 br :leave
 
:outerBody
 %index2 <- 0
 br :header2
 
:header2
 %check2 <- %index2 < %l2
 br %check2 :innerBody 
 br :endOuterBody
 
:innerBody
 %newVar1 <- 0
 %newVar2 <- %m + 16
 %newVar3 <- load %newVar2
 %newVar4 <- %newVar3 >> 1
 %newVar5 <- 1
 %newVar5 <- %newVar4 * %newVar5
 %newVar6 <- %index * %newVar5
 %newVar1 <- %newVar6 + %newVar1
 %newVar1 <- %newVar1 + %index2
 %newVar0 <- %newVar1 * 8
 %newVar0 <- %newVar0 + 24
 %newVar7 <- %m + %newVar0
 %e <- load %newVar7
 %sameE <- %e = %v
 br %sameE :setAndLeave 
 br :endInnerBody
 
:endInnerBody
 %index2 <- %index2 + 1
 br :header2
 
:init
 %found <- 1
 %index <- 0
 br :header
 
:entry
 %newVar8 <- 0 * 8
 %newVar9 <- %newVar8 + 8
 %newVar10 <- %m + %newVar9
 %l1encoded <- load %newVar10
 %newVar11 <- 1 * 8
 %newVar12 <- %newVar11 + 8
 %newVar13 <- %m + %newVar12
 %l2encoded <- load %newVar13
 call print (%l1encoded)
 call print (%l2encoded)
 %l1 <- %l1encoded >> 1
 %l2 <- %l2encoded >> 1
 br :init
}

