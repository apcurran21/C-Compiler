define @main () {
 
:NNNNNNNNN
 br :entry
 
:myLabel1
 %newVar1 <- 3 >> 1
 %newVar0 <- %newVar1
 %newVar2 <- 5 >> 1
 %newVar0 <- %newVar0 * %newVar2
 %newVar3 <- 7 >> 1
 %newVar0 <- %newVar0 * %newVar3
 %newVar0 <- %newVar0 << 1
 %newVar0 <- %newVar0 + 1
 %newVar0 <- %newVar0 + 6
 %ar <- call allocate (%newVar0, 1)
 %newVar4 <- %ar + 8
 store %newVar4 <- 3
 %newVar5 <- %ar + 16
 store %newVar5 <- 5
 %newVar6 <- %ar + 24
 store %newVar6 <- 7
 %newVar7 <- 0 * 8
 %newVar8 <- %newVar7 + 8
 %newVar9 <- %ar + %newVar8
 %arLen <- load %newVar9
 call print (%arLen)
 %newVar10 <- 1 * 8
 %newVar11 <- %newVar10 + 8
 %newVar12 <- %ar + %newVar11
 %arLen <- load %newVar12
 call print (%arLen)
 %newVar13 <- 2 * 8
 %newVar14 <- %newVar13 + 8
 %newVar15 <- %ar + %newVar14
 %arLen <- load %newVar15
 call print (%arLen)
 return 
 
:entry
 br :myLabel1
}

