r
q
r
q
r
p i
p *i
p i->name
p *i->name
p *i->t1
p *i->op
p *i->t2
b compiler.cpp:89
r
p p
p p.functions
p p.functions[0]
p p.functions[0]->instructions
p p.functions[0]->instructions[0]
p *p.functions[0]->instructions[0]
p *p.functions[0]->instructions[1]
p *p.functions[0]->instructions[2]
p *p.functions[0]->instructions[3]
p *p.functions[0]->instructions[4]
p *p.functions[0]->instructions[5]
s
n
n
s
n
p functionName_copy
p *functionName_copy
p functionName_copy->print()
n
dashboard -layout variables stack source breakpoints
p returnType_copy->print()
p f
p *f
p f->functionName->print()
n
p newF
p new_f
p *new_f
p new_f->functionName->print()
p new_f->returnType->print()
n
p new_f->parameters
n
n
p i 
*i
p *i
s
n
n
b encode.cpp:27
c
n
p encoding_visitor
p *encoding_visitor
n
p i
p *i
s
s
p instructions
n
p instructions
n
n
n
s
s
n
n
n
n
s
n
n
p encoding_visitor->instructions
p encoding_visitor->instructions[2]
p *encoding_visitor->instructions[2]
n
s
s
n
p encoded
p encoded[0]
p *encoded[0]
p *encoded[1]
s
n
p out
n
p item
p *item
n
p v_prime
p v_prime->print()
n
p type_v_prime->print()
n
p i0
p *i0
p i0->type->print()
p i0->name->print()
n
p i1_op->print()
n
p i1_n->print()
n
p i1
p *i1
p i1->name->print()
p i1->t1->print()
p i1->t2->print()
p i1->op->print()
n
n
p instructions
p instructions[0]
p *instructions[0]
p out
n
p out
n
p item
p *item
n
n
n
n
n
n
p i1
p *i1
p i1->name
p *i1->name
p i1->name->print()
p i1->t1->print()
p i1->op->print()
p i1->t1->print()
p i1->t2->print()
p instructions
n
p instructions
n
p instructions
p v_prime
p v_prime->print()
n
n
n
p decoded
p decoded[0]->print()
p decoded[1]->print()
n
p i->name
p i->name->print()
q
