// fibonacci
// iterative approach

void main() {
    int64 res
    res <- fibonacci(20)

    // 6765
    print(res) 

    // finally no encoding
    return
}

int64 fibonacci(int64 k) {
    int64 if
    if <- k = 1
    br if :initialConditionTrue :initialConditionFalse
    
    :initialConditionFalse
    if <- k = 2
    br if :initialConditionTrue :initialConditionFalse2
    
    :initialConditionFalse2
    int64 a
    int64 b
    int64 i
    int64 res
    a <- 1
    b <- 1
    i <- 3
    res <- 0
    
    :for
    
        if <- i <= k
        br if :forIntoLoop :forBreak
        :forBreak
        return res
        
        :forIntoLoop
        res <- a
        res <- res + b
        a <- b
        b <- res
        
        i <- i + 1
        br :for
        
    :initialConditionTrue
    return 1
}
