(@go
(@go
	0 1
	rdi <- 5
	rsi <- 5
	call allocate 2
	r10 <- rax
	mem rsp 0 <- r10
	r10 <- mem rsp 0
	rdi <- r10
	call print 1
	r10 <- mem rsp 0
	rdi <- r10
	rsi <- 0
	mem rsp -8 <- :checkArray_ret
	call @checkArray 2
	:checkArray_ret
	r10 <- rax
	rdi <- r10
	mem rsp -8 <- :printValue_ret
	call @printValue 1
	:printValue_ret
	rdi <- 5
	rsi <- 0
	mem rsp -8 <- :checkArray_ret2
	call @checkArray 2
	:checkArray_ret2
	r10 <- rax
	rdi <- r10
	mem rsp -8 <- :printValue_ret2
	call @printValue 1
	:printValue_ret2
	return
	)
(@checkArray
	2 0
	r8 <- rdi
	r11 <- rsi
	r10 <- r8
	r10 &= 1
	cjump r10 = 0 :isAnArray
	goto :isAnInt
	:isAnInt
	rax <- 1
	return
	:isAnArray
	r10 <- r11
	r10 *= 8
	r10 += 8
	r10 <- r10
	r10 += r8
	r10 <- mem r10 0
	rdi <- r10
	call print 1
	rax <- 0
	return
	)
(@printValue
	1 0
	r10 <- rdi
	r10 <<= 1
	r10++
	rdi <- r10
	call print 1
	return
	)
)
