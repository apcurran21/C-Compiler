p graph_copy->printGraph()
s
n
n
n
n
n
n
n
n
n
n
n
n
n
s
n
n
n
b interference_graph.cpp:40
p it
p *it
p *it.first
p (*it).first
p *(*it).first
p *(*it).first.var
n
n
n
p other_node
p *other_node
n
p it
p printGraph()
p it
p (*it)->second
n
p node
p *node
p *node.var
p it->second.find(node)
n
p it->second
p graph
p printGraph()
printNodeDegrees()
p printNodeDegrees()
n
p printNodeDegrees()
n
p printNodeDegrees()
graph
p graph
n
p other_node
p *other_node
n
p it
n
p it->second
p it->second.find(node)
p it->second.end()
n
n
p other_node
p *other_node
p *other_node.var
printNodeDegrees
p printNodeDegrees()
n
n
p it->second.find(node)
p *it->second.find(node)
p **it->second.find(node)
p **it->second.find(node).var
p (**it->second.find(node)).var
p *(**it->second.find(node)).var
p printGraph()
n
p printGraph()
n
n
p printNodeDegrees()
n
n
n
n
b interference_graph.cpp:62
c
p printGraph()
p graph
p nodes
n
p graph
n
p nodes
n
p graph
p *graph
p graph->size
n
p graph->getSize()
q
run
p graph
p *graph
p curr_nodes
graph->getVarNodes()
p graph->getVarNodes()
p graph->printGraph()
r
p graph
p *graph
p graph->printGraph()
p graph->getSize()
r
info b
b compiler.cpp:186
b L2.cpp:33
r
c
n
p seenVariables
n
n
n
n
pn
n
p uncolored_ndes
p uncolored_nodes
p color_result
n
p uncolored_nodes.size()
n
p interference_graph
p *interference_graph
p *interference_graph_copy
p interference_graph_copy->printGraph()
p interference_graph_copy->printNodeDegreees()
p interference_graph_copy->printNodeDegrees()
p interference_graph_copy->printColors()
p fptr
p *fptr
n
b L2.cpp:96
c
p fptr
p fptr_out
n
p fptr
p fptr_out
n
n
n
n
p fptr_out
p p_out
n
p p_out
n
n
n
s
info b
del 2
del 3
info b
p fptr
p *fptr
b L2.cpp:33
b L2.cpp:33
del 5
info b
dashboard -layot source stack breakpoints variables
dashboard -layout source stack breakpoints variables
n
n
n
p interference_graph->printGraph()
n
n
n
n
n
p uncolored_nodes
p uncolored_nodes[0]
p *uncolored_nodes[0]
p *uncolored_nodes[0].var
p interference_graph->nodes 
p interference_graph->nodes.begin()
p *interference_graph->nodes.begin()
p *interference_graph->nodes.begin().first
p *interference_graph->nodes.begin()->first
p interference_graph->printColors()
p interference_graph_copy->printColors()
p interference_graph_copy->nodes
p interference_graph_copy->printColors()
n
n
save breakpoints notes-debug/graph_color.txt 
info b
n
p node
p &node
p &uncolored_nodes[0]
p *&uncolored_nodes[0]
p *&node
info b
b L2.cpp:113
c
p fptr
p *fptr
n
n
n
p spilled_set
p spilled_set
p node->var
p *node->var
p newFunction
p *newFunction
n
n
n
b L2.cpp:123
c
n
p uncolored_nodes
n
n
p fptr
p *fptr
c
c
c
c
c
r
info b
c
p *fptr
c
p fptr
p *fptr
c
n
n
n
p spilled_ste
p spilled_set
p *fptr
p *new_funciton
p *newFunciton
p *newFunction
q
