s
n
p pair
n
b compiler.cpp:232
r
n
n
dashboard -layout source stack breakpoints
n
n
n
n
n
p graph->printNodeDegrees()
n
p graph->printNodeDegrees()
q
b compiler.cpp:234
r
n
n
n
dashboard -layout source stack breakpoints
n
n
n
n
n
n
p nodes_to_spill
p nodes_to_spill[0]
p *nodes_to_spill[0].var
n
n
n
n
b graph
p graph
p *graph
r
n
n
n
n
n
n
n
p graph->printNodeDegrees
p graph->printNodeDegrees()
n
p graph->printNodeDegrees()
p graph
p *graph
r
n
n
n
n
n
n
n
s
n
n
n
p node_stack
p node_stack[0]
p *node_stack[0]
p *node_stack[0].var
n
s
n
n
n
n
n
n
info b
b compiler.cpp:312
info b
c
n
r
n
n
n
n
n
n
n
n
r
n
n
n
b compiler.cpp:n
n
n
n
n
s
n
n
p graph
p *graph
p graph->getNodeDegrees()
p g
p graph
p graph->printNodeDegrees()
n
s
r
info b
rn
n
r
n
n
n
n
n
nn
n
sdfs
s
n
n
n
b graph_coloring.cpp:141
info b
c
n
n
n
n
p node
p *node.var
n
n
n
n
n
n
n
n
n
dn
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
p n
p *n
p *n.var
p curr_node_iterator
p curr_node_iterator 
q
q
b compiler.cpp:212
q
b compiler.cpp:212
r
q
b compiler.cpp:212
b liveness_analysis.cpp:107
b graph_coloring.cpp:36
b graph_coloring.cpp:87
b graph_coloring.cpp:141
r
c
c
dashboard -layout source stack breakpoints
save breakpoints customtests/2-19breaks.txt
save breakpoints notes-debug/2-19breaks.txt
n
p graph_copy->printNodeDegrees()
n
p graph_copy->printNodeDegrees()
n
p graph_copy->printNodeDegrees()
p graph->printNodeDegrees()
n
n
n
n
n
n
n
n
n
p best_node
p *best_node.var
p stack
n
p stack
p graph->printNodeDegree()
p graph->printNodeDegrees()
s
n
p pair
p pair->first
p *pair->first
p *pair->first.var
pair->second
p pair->second
p pair->second.begin
p pair->second.begin()
p *pair->second.begin()
p **pair->second.begin()
p **pair->second.begin().var
p (**pair->second.begin()).var
p *(**pair->second.begin()).var
p pair.second.find(node)
p pair.second.find(*pair->second.begin())
p *pair.second.find(*pair->second.begin())
p **pair.second.find(*pair->second.begin())
n
graph->printNodeDegrees()
p graph->printNodeDegrees()
info variables
n
p printNodeDegrees()
n
p pair
p pair->first
p *pair->first
p *pair->first.var
n
p pair.first
p *pair.first
p printNodeDegrees()
n
p printNodeDegrees()
n
n
p node
p pair
p pair->first
p *pair->first
p *pair->first.var
n
p pair.second
q
