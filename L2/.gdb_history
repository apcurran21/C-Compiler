next
p replaceD
quit
b compiler.cpp:186
b L2.cpp:25
r
c
p fptr
p *fptr
c
p *fptr
c
b curr_nodes.back()
p curr_nodes.back()
p curr_nodes
r
c
c
p *fptr
n
n
b L2.cpp:37
q
b compiler.cpp:186
b L2.cpp:37
r
c
p fptr
p *fptr
c
p *fptr
n
n
b L2.cpp:55
r
c
n
n
n
p uncolored_nodes
p *uncolored_nodes[0]
p *uncolored_nodes[0].var
n
n
n
n
n
n
n
n
dashboard -layout source stack variables breakpoints
dashboard -layout source stack breakpoints
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
p spill_results
p spill_result
n
n
p spilled_set
p newFunction
p *newFunction
p fptr
p *fptr
n
p seenVariables 
p newFunction
p *newFunction
n
n
b L2.cpp:122
c
n
p uncolored_nodes
n
p fptr_out
p *fptr_out
p *fptr
n
n
p seenVariables
n
p varEntry
n
n
p varName
n
n
n
n
n
s
p graph->printColors()
n
p graph->printColors()
p graph->nodes 
p graph->nodes.begin()
p *graph->nodes.begin()
p *graph->nodes.begin().second
p *graph->nodes.begin()->second
p *graph->nodes.begin()->second.var
p graph->nodes.begin()->second.var
p graph->graph.find(graph->nodes.begin()->second)
p graph->graph.find(graph->nodes.begin()->second).second
p graph->graph.find(graph->nodes.begin()->second)->second
p graph->graph.find(graph->nodes.begin()->second)->second.begin()
p *(graph->graph.find(graph->nodes.begin()->second)->second.begin())
p *(graph->graph.find(graph->nodes.begin()->second)->second.begin()).var
p **(graph->graph.find(graph->nodes.begin()->second)->second.begin())
p **(graph->graph.find(graph->nodes.begin()->second)->second.begin()).var
p **(graph->graph.find(graph->nodes.begin()->second)->second.begin())->var
p *(graph->graph.find(graph->nodes.begin()->second)->second.begin())->var
p *(graph->graph.find(graph->nodes.begin()->second)->second.begin()).var
p *(graph->graph.find(graph->nodes.begin()->second)->second.begin())
p (*(graph->graph.find(graph->nodes.begin()->second)->second.begin()))->var
p *(*(graph->graph.find(graph->nodes.begin()->second)->second.begin()))->var
graph->printGraph()
p graph->printGraph()
n
p node_stack
p *node_stack[0]
p *node_stack[0].var
p *node_stack[1].var
p *node_stack[2].var
p *node_stack[3].var
p *node_stack[4].var
p *node_stack[5].var
p graph_copy
p *graph_copy
p *graph
s
n
n
n
n
n
n
n
n
n
p uncolored_nodes
p uncolored_nodes[0]
p *uncolored_nodes[0]
p *uncolored_nodes[0].var
p interference_graph->printGraph()
n
n
n
p node
p *node.var
b L2.cpp:112
c
n
n
n
p spilled_set
p printFunction(fptr)
p printFunction(newFunction)
p node->var->name
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
nn
n
n
n
n
n
n
n
n
n
n
n
n
nn
n
nn
n
n
n
nn
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
p fptr
p *fptr
n
p interference_graph
p *interference_graph
p interference_graph->printGraph()
q
r
p graph->printGraph()
b L2.cpp:31
q
b L2.cpp:32
r
dashboard -layout stack source breakpoints
p fptr
p *fptr
c
p fptr
p *fptr
c
p fptr
p *fptr
c
p *fptr
c
save breakpoints customtests/blahBreaks.txt
q
