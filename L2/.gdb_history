p *fptr.instructions[1]
next
next
quit
break src/liveness_analysis.cpp:275
run
dashboard -layout source variables
p gen_kill_sets
quit
break src/liveness_analysis.cpp:278
run
quit
break src/liveness_analysis.cpp:113
run
next
p gen_kill_sets
dashboard -layout source stack variables
next
p out_kill_sets
p gen_kill_sets
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
jquit
quit
b liveness_analysis.cpp:105
run
dashboard -layout source variables stack
n
n
p gen_kill_sets 
n
p in_out_sets 
n
n
p fptr
p *fptr
p fptr->instructions
p fptr->instructions[0]
p *fptr->instructions[0]
p *fptr->instructions[1]
p *fptr->instructions[2]
p *fptr->instructions[3]
p *fptr->instructions[4]
p *fptr->instructions[5]
p *fptr->instructions[6]
p *fptr->instructions[7]
p *fptr->instructions[8]
p *fptr->instructions[9]
p *fptr->instructions[10]
n
s
n
n
s
s
n
p var
n
p dynamic_cast<Variable*>(instructions->d)
p dynamic_cast<Variable*>(instruction->d)
p *dynamic_cast<Variable*>(instruction->d)
n
p instruction->defined
p instruction->defined[0]
p instruction->defined.begin()
p *instruction->defined.begin()
n
n
n
p instruction
p *instruction
p p
p function
s
p var
p *var
n
p var
n
p *dynamic_cast<Variable*>(instruction->d)
p instruction->defined
n
p instruction->defined
p instruction->defined.begin()
p *instruction->defined.begin()
p dynamic_cast<L2::Register*>(0x4b5090)
p dynamic_cast<L2::Register*>(*0x4b5090)
set L2::Variable* $ptr = 0x4b5090
set L2::Variable* $ptr = instruction->defined.begin()
set $ptr = instruction->defined.begin()
p $ptr
whatis $ptr
p dynamic_cast<L2::Register*>($ptr)
p &instruction->defined.begin()
p *&instruction->defined.begin()
p **&instruction->defined.begin()
p instruction->defined
p instruction->defined[0]
p instruction->defined.begin()
p *instruction->defined.begin()
p (*instruction->defined.begin())
p (*instruction->defined.begin())->value
p (*instruction->defined.begin())->name
p (*instruction->defined.begin())
n
n
dashboard -layout source variables stack breakpoints
b liveness_analysis.cpp:643
b L2.cpp:643
continue
n
p p
p fptr
p fptr->instructions
p fptr->instructions[0]
p *fptr->instructions[0]
p *fptr->instructions[1]
p fptr->instructions[1]->defined
p fptr->instructions[1]->defined.begin()
p *fptr->instructions[1]->defined.begin()
p *fptr->instructions[2]
p *fptr->instructions[2]
p *fptr->instructions[2].used
p fptr->instructions[2]->used
p fptr->instructions[2]->used[0]
p fptr->instructions[2]->used.begin()
p fptr->instructions[2]->used.begin()+8
p fptr->instructions[2]->used.second
p fptr->instructions[2]->used.second()
p fptr->instructions[2]->used.end()
p fptr->instructions[2]->used
p *std::next(mySet.begin(), 1)
p *std::next(fptr->instructions[2]->used..begin(), 1)
p *std::next(fptr->instructions[2]->used.begin(), 1)
p fptr->instructions[2]->used.begin()

p fptr->instructions[2]->used.begin()
p fptr->instructions[2]->used.find()
p fptr->instructions[2]->used.find(0x4b3b90)
p fptr->instructions[2]->used.end()
set $inst = *fptr->instructions[2]
p $inst
set $it = $inst.used.begin()
p $it
while $it != $inst.used.end()
p *$it
set $it = $it + 1
end
b L2.cpp:593
run
n
continue
p instruction
p *instruction
p *instruction.dst
p *instruction.s
p *instruction.M
q
