p *(*instruction).s.print()
p (*instruction).s.print()
p (*instruction).s.name
n
p s
p instruction
p *instruction
n
p instruction->d
p *instruction->d
s
p var
n
n
n
n
q
b L2.cpp:742
r
n
p s
n
p d
p p
s
p var
p *var
p &var
p (&var
n
p iterator
p color_graph->nodes.end()
b compiler.cpp:184
n
n
s
n
p iterator
n
n
n
n
p instruction
p iptr
p *iptr
p *iptr.instruction
p dynamic_cast<Instruction_assignment*>(iptr.instruction)
p dynamic_cast<Instruction_assignment*>(iptr)
p *dynamic_cast<Instruction_assignment*>(iptr)
p *dynamic_cast<Instruction_assignment*>(iptr).s
p (*dynamic_cast<Instruction_assignment*>(iptr)).s
p *(*dynamic_cast<Instruction_assignment*>(iptr)).s
p (*dynamic_cast<Instruction_assignment*>(iptr)).s
p (*dynamic_cast<Instruction_assignment*>(iptr)).s
p *dynamic_cast<Instruction_assignment*>(iptr)
p *dynamic_cast<Instruction_assignment*>(iptr).s
p **dynamic_cast<Instruction_assignment*>(iptr).s
p *dynamic_cast<Instruction_assignment*>(iptr)
p *dynamic_cast<Instruction_assignment*>(iptr)->printMe()
n
n
n
r
n
n
n
p p
p.functions
p p->functions
p p->functions[0]
p *p->functions[0]
p *p->functions[1]
p *p->functions[1].instructions
p p->functions[1].instructions
p p->functions[1].instructions[0]
p *(p->functions[1].instructions[0])
p *(p->functions[1].instructions[1])
p *(p->functions[1].instructions[2])
p *(p->functions[1].instructions[3])
p *(p->functions[1].instructions[3]).printMe()
p *(p->functions[1].instructions[3])->printMe()
p *(p->functions[1].instructions[3]).s
p (p->functions[1].instructions[3])->s
p (p->functions[1].instructions[3])
p dynamic_cast<Instruction_assignment*>(p->functions[1].instructions[3])
p p->functions[1].instructions[3]
p *p->functions[1].instructions[3]
p dynamic_cast<Instruction_assignment*>(p->functions[1].instructions[3])
p dynamic_cast<Instruction_assignment*>((p->functions[1].instructions[3]))
p dynamic_cast<Instruction_assignment*>(p->functions[1].instructions[3])
q
save breakpoints b.txt
q
source b.txt
r
n
n
p p
c
n
n
p instruction->s
p *instruction->s
p dynamic_cast<*Variable>(p->instruction.s)
p dynamic_cast<*Variable>(instruction->s)
n
q
source b.txt
r
c
n
n
q
source b.txt 
r
n
n
n
n
n
p p->functions
p *p->functions
p p->functions[0]
p *p->functions[0]
set $f = $3
p $f
n
p fptr
p *fptr
n
n
p graph
p *graph
b compiler.cpp:205
n
n
p big_fail
n
p new_spilled_vars
p new_spilled_vars[0]
p new_spilled_vars.begin()
p *new_spilled_vars.begin()
p **new_spilled_vars.begin()
n
n
n
p var
p *var
p new_spilled_vars
s
n
n
n
n
p result
p initial_replacement
p *initial_replacement
n
n
n
n
n
p instruction
p *instruction
p *instruction.successors
p instruction.successors
p instruction.successors[0]
p instruction.successors.begin()
p *instruction.successors.begin()
p **instruction.successors.begin()
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
b compiler.cpp:252
c
new_spilled_var
p new_spilled_vars
p new_spilled_vars.begin()
p *new_spilled_vars.begin()
p **new_spilled_vars.begin()
p **new_spilled_vars.begin()
p f->spilled_variables
p fptr->spilled_variables
n
p fptr->spilled_variables
p *fptr->spilled_variables
p fptr->spilled_variables.begin()
p *fptr->spilled_variables.begin()
p fptr->spilled_variables.begin()
p fptr->spilled_variables.begin()->second
p *fptr->spilled_variables.begin()->second
p *fptr->spilled_variables.begin().second
n
p p
p p.variables
p p.variables[0]
p p.functions[0]
p *p.functions[0]
q
run
q
r
show stack
info stack
b spill.cpp:102
r
p f->spill_variables
p initial_replacement
p *initial_replacement
n
q
q
b spill.cpp:103
r
p f->variable_allocator
p initial_replacement
p *initial_replacement
n
r
p f->spill_variables
n
b compiler.cpp:184
r
n
n
p p
p *p->functions
p p->functions
p p->functions[0]
b spill.cpp:20
r
c
n
p initial_replacement
p *initial_replacement
q
