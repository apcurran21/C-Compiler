n
n
n
n
p node_current_neighbors
p node_current_neighbors[7]
p *node_current_neighbors[7]
p *node_current_neighbors[7].var
p *node_current_neighbors[6].var
p *node_current_neighbors[5].var
p *node_current_neighbors[4].var
p *node_current_neighbors[3].var
p *node_current_neighbors[2].var
p *node_current_neighbors[1].var
p *node_current_neighbors[0].var
p it_curr_node_neighbors_orig_g
p (*it_curr_node_neighbors_orig_g).second
n
p neighbors_colors
p g->graph.find(node_current_neighbors[0])
p *g->graph.find(node_current_neighbors[0])
p (*g->graph.find(node_current_neighbors[0]))
p (*g->graph.find(node_current_neighbors[0])).first
p *(*g->graph.find(node_current_neighbors[0])).first.var
p *(*g->graph.find(node_current_neighbors[1])).first.var
p *(*g->graph.find(node_current_neighbors[2])).first.var
p *(*g->graph.find(node_current_neighbors[3])).first.var
p *(*g->graph.find(node_current_neighbors[4])).first.var
p *(*g->graph.find(node_current_neighbors[5])).first.var
p node_current_neighbors.size()
run
n
b graph_coloring.cpp:209
c
s
n
n
n
n
n
p neighbors_colors
run
info b
b interference_graph.cpp:235
run
c
c
p nodes
n
n
p node
p *node
n
q
set args -g 0 -O0 -c test_out/testa.L2
set args -g 0 -O0 -c test_out/testa.L2f
b graph_coloring.cpp:160
r
n
n
n
b graph_coloring.cpp:227
c
n
p neighbors_colors
n
p color
n
n
n
p node
p *node.var
n
n
q
set args -g 0 -O0 -c test_out/testa.L2f
b graph_coloring.cpp:227
r
n
p neighbors_colors
n
p color
n
n
p node
p *node
p *node.color
p (*node).color
p (*node).var
p* (*node).var
n
n
p g.nodes.size()
n
p g.nodes.size()
n
n
p node
p *node.var
p *node.color
p (*node).color
c
n
p neighbors_colors
n
p color
n
n
p node
p *node.var
p (*node).var
p (*node).var.color
p (*node).color
p neighbors_colors
info b
del 1
p color
n
p color
n
p neighbors_colors
p gp_registers
n
n
n
n
p g->graph.size()
p g->spilled_vars
p g->nodes.size()
n
n
p node
p *node.var
b graph_coloring.cpp:227
c
n
p neighbors_colors
p node
p *node.var
n
p color
n
p color
n
n
p color
n
n
p *node
n
n
p g->spilled_vars
p g.nodes.size()
n
p g.nodes.size()
n
n
n
n
n
q
set args -g 0 -O0 -c test_out/testa.L2f 
b src/compiler.cpp:161
run
p *interference_graph
p *interference_graph.nodes 
p *interference_graph[0]
p *interference_graph
p *interference_graph[0x4d444b0]
$p interference_graph
p interfernece_graph
dashboard -layout source varialbes
dashboard -layout source variables
p interference_graph
p *interference_graph
p *interference_graph->graph
p *interference_graph.graph
p interference_graph->graph
p interference_graph->graph.begin()
p interference_graph->graph[0x4d38a0]
p interference_graph->graph.find(0x4d3920)
q
set args tests/test25.L2
run
b compiler.cpp:33
run
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
p p
p funct
p functions
p p.functions
p p.functions[0]
p *p.functions[0]
p *p.functions[0].instructions
p (*p.functions[0]).instructions
p (*p.functions[0]).instructions[0]
p *(*p.functions[0]).instructions[0]
n
n
n
n
n
p all_graphs
n
n
p gen_kill_sets
n
n
p fptr
p *fptr
n
p liveness_results 
p liveness_results.gen
n
p graph
p *graph
p graph.nodes
p graph.nodes.begin()
p *graph.nodes.begin()
p *graph.nodes.begin().first
p (*graph.nodes.begin()).first
p *(*graph.nodes.begin()).first
n
p color_result 
n
n
p big_fail
p new_spilled_vars
n
n
p *(*graph.nodes.begin()).first
p (*graph.nodes.begin()).first
p (*graph.nodes.begin()).second
p *(*graph.nodes.begin()).second
p *(*graph.nodes.begin()).second.var
n
p all_graphs 
p all_graphs.begin()
n
n
n
q
