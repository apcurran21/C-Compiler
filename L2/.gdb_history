quit
break src/compiler.cpp:143
run
next
next
next
next
next
run
next
next
next
next
p checker
quit
break src/compiler.cpp:143
run
next
next
next
next
next
quit
break src/compilers.cpp:144
quit
break src/compiler.cpp:144
run
dashboard -layout source variables
next
next
next
run
step
quit
break src/compiler.cpp:144
run
dashboard -layout source variables
next
next
step
step
step
step
next
next
next
next
next
info breakpoints
del 1
break src/interference_graph.cpp:133
info breakpoints
run
next
next
next
next
next
next
next
next
next
next
info brekapoints
info breakpoints
del 2
break src/interference_graph.cpp:174
run
info breakpoints
del 3
break src/interference_graph.cpp:165
run
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
next
continue
continue
run
continue
continue
continue
run
continue
continue
next
next
next
run
continue
continue
mext
next
next
p in_out_sets.In_Set[0][]
p in_out_sets.In_Set[0][i]
p in_out_sets.In_Set[0][i][0]
p in_out_sets.In_Set[0]
step
step
step
step
step
step
step
step
step
step
info breakpoints
del 4
break src/interference_graph.cpp:40
run
next
next
next
next
next
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
info breakpoints
del 5
break src/interference_graph.cpp:167
run
continue
continue
p interference_graph
p *interference_graph
next
quit
break src/interference_graph.cpp:167
run
dashboard -layout source variables
next
info breakpoint
del 1
break src/interference_graph.cpp:179
run
continue
continue
step
step
step
step
step
step
next
next
next
next
next
next
next
quit
break src/interference_graph.cpp:180
run
continue
continue
run
run
p in_out_sets.Out_Set[0][i]
p *in_out_sets.Out_Set[0][i]
p *in_out_sets.Out_Set[0][i][1]
p *in_out_sets.Out_Set[0][i].3
p 0x4c2f90
p *0x4c2f90
quit
break src/interference_graph.cpp:148
run
dashboard -layout source variables
next
p f
p *f
p *f->instructions
p f->instructions
p f->instructions[0]
p *f->instructions[0]
p *f
p f->instructions[0]
p *f->instructions[0]
quit
break src/compiler.cpp:120
run
quit
break src/compiler.cpp:120
run
del break 1
break src/compiler.cpp:92
run
step
next
next
next
next
run
next
next
run
step
step
next
next
(pegtl::analyze< spill_grammar >()
next
p fileName
next
next
next
quit
break src/code_generator.cpp:120
run
p fptr
p *fptr
p *fptr->arguments
p fpter->arguments
p fptr->arguments
quit
