(@go
  (@go
0
    rdi <- 5
    rsi <- 85
    mem rsp -8 <- :f_ret_1
    call allocate 2
    :f_ret_1
    mem rax 16 <- 5
    rdi <- rax
    mem rsp -8 <- :f_ret_2
    call @printArraySum 1
    :f_ret_2
    return
  )
  (@printArraySum
1
    %ifArray <- rdi
    %ifArray &= 1
    cjump %ifArray = 0 :isArray 
goto :notArray

    :notArray
    rax <- -1
    return

    :isArray
    %i <- 0
    %array <- rdi
    %arrayLen <- mem rdi 0
    rdi <- %arrayLen
    rdi <<= 1
    rdi += 1

    %arraySum <- 0
    :loop
    cjump %i < %arrayLen :continue 
goto :exit

    
    :continue
    rdi <- %i
    rdi <<= 1
    rdi += 1
    %array += 8
    %arrayElement <- mem %array 0 
    rdi <- %arrayElement
    rdi >>= 1
    %arraySum += rdi
    %i++
    goto :loop

    :exit
    rdi <- %arraySum
    rdi <<= 1
    rdi += 1
    call print 1
    rax <- 1
    return
  )
)
