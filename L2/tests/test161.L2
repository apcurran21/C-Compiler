(@main
  (@generateFibonacciSequence
    1
    %n <- rdi
    %isNZero <- %n = 0
    
    cjump %isNZero = 1 :call_label0
    goto :call_label2
    :call_label0
    rax <- 1
    return
    :call_label1
    rax <- %originalTablePointer
    return
    :call_label2
    %size <- %n
    %size += 1
    %size <- %size
    %size <<= 1
    %size <- %size
    %size += 1
    rdi <- %size
    rsi <- 1
    call allocate 2
    %table <- rax
    mem %table 16 <- 3
    %tablePointer <- %table
    %originalTablePointer <- %table
    %offset <- 24
    %tableLength <- %n
    %tableLength <- %tableLength
    %tableLength <<= 3
    %tableLength <- %tableLength
    %tableLength += 8
    %nIsOne <- %n = 2
    
    cjump %nIsOne = 1 :call_label1
    goto :call_label3
    :call_label3
    %tablePointer <- %originalTablePointer
    %tablePointer <- %tablePointer
    %tablePointer += %offset
    %prevValue <- mem %tablePointer -8 
    %prevValue <- %prevValue
    %prevValue -= 1
    %prevValue <- %prevValue
    %prevValue >>= 1
    %prevPrevValue <- mem %tablePointer -16 
    %prevPrevValue <- %prevPrevValue
    %prevPrevValue -= 1
    %prevPrevValue <- %prevPrevValue
    %prevPrevValue >>= 1
    %prevValue <- %prevValue
    %prevValue += %prevPrevValue
    %prevValue <- %prevValue
    %prevValue <<= 1
    %prevValue <- %prevValue
    %prevValue += 1
    mem %tablePointer 0  <- %prevValue
    %offset <- %offset
    %offset += 8
    %isIteratorLessThanLength <- %offset <= %tableLength
    
    cjump %isIteratorLessThanLength = 1 :call_label3
    goto :call_label4
    :call_label4
    rax <- %originalTablePointer
    return
  )
  (@getNthFibonacciNumber
    1
    %n <- rdi
    rdi <- %n
    mem rsp -8 <- :call_label_ciao_7
    call @generateFibonacciSequence 1
    :call_label_ciao_7
    %fibonacciSequence <- rax
    %isIntOrArray <- %fibonacciSequence
    %isIntOrArray &= 1
    cjump %isIntOrArray = 1 :call_label_ciao_5
    goto :call_label_ciao_6
    :call_label_ciao_5
    rax <- 3
    return
    :call_label_ciao_6
    %nthAddress <- %n
    %nthAddress += 1
    %nthAddress <- %nthAddress
    %nthAddress *= 8
    %nthAddress <- %nthAddress
    %nthAddress += %fibonacciSequence
    %nthFibonacciNumber <- mem %nthAddress 0 
    rax <- %nthFibonacciNumber
    return
  )
  (@main
    0
    %n <- 20
    rdi <- %n
    mem rsp -8 <- :call_label_ciao__ciao_8
    call @generateFibonacciSequence 1
    :call_label_ciao__ciao_8
    %fibonacciSequence <- rax
    rdi <- %fibonacciSequence
    call print 1
    rdi <- %n
    mem rsp -8 <- :call_label_ciao__ciao_9
    call @getNthFibonacciNumber 1
    :call_label_ciao__ciao_9
    %nthFibonacciNumber <- rax
    rdi <- %nthFibonacciNumber
    call print 1
    %n <- 40
    rdi <- %n
    mem rsp -8 <- :call_label_ciao__ciao_10
    call @generateFibonacciSequence 1
    :call_label_ciao__ciao_10
    %fibonacciSequence <- rax
    rdi <- %fibonacciSequence
    call print 1
    rdi <- %n
    mem rsp -8 <- :call_label_ciao__ciao_11
    call @getNthFibonacciNumber 1
    :call_label_ciao__ciao_11
    %nthFibonacciNumber <- rax
    rdi <- %nthFibonacciNumber
    call print 1
    %n <- 0
    rdi <- %n
    mem rsp -8 <- :call_label_ciao__ciao_12
    call @generateFibonacciSequence 1
    :call_label_ciao__ciao_12
    %fibonacciSequence <- rax
    rdi <- %fibonacciSequence
    call print 1
    rdi <- %n
    mem rsp -8 <- :call_label_ciao__ciao_13
    call @getNthFibonacciNumber 1
    :call_label_ciao__ciao_13
    %nthFibonacciNumber <- rax
    rdi <- %nthFibonacciNumber
    call print 1
    %n <- 1
    rdi <- %n
    mem rsp -8 <- :call_label_ciao__ciao_14
    call @generateFibonacciSequence 1
    :call_label_ciao__ciao_14
    %fibonacciSequence <- rax
    rdi <- %fibonacciSequence
    call print 1
    rdi <- %n
    mem rsp -8 <- :call_label_ciao__ciao_15
    call @getNthFibonacciNumber 1
    :call_label_ciao__ciao_15
    %nthFibonacciNumber <- rax
    rdi <- %nthFibonacciNumber
    call print 1
    return
  )
)
