(@go
    //returns 1 if positive integer and is modx == 0, else return 0
    (@mod
        2
        cjump rdi = 0 :mgood
        :misneg
        cjump -1 < rdi :mloop
        rax <- 0
        return

        :mloop
        rdi -= rsi
        cjump rdi = 0 :mgood
        goto :misneg

        :mgood
        rax <- 1
        return
    )
    (@modsum
        1
        %original <- rdi
        //rolling sum
        %sum <- 0
        //which number is being processed
        %processing <- 0

        :sumloop
        %processing += 1
        cjump %original <= %processing :done
        rdi <- %processing
        rsi <- 3
        mem rsp -8 <- :ret0
        call @mod 2
        :ret0
        cjump rax = 1 :dosum
        rdi <- %processing
        rsi <- 5
        mem rsp -8 <- :ret1
        call @mod 2
        :ret1
        cjump rax = 0 :sumloop
        :dosum
        %sum += %processing
        goto :sumloop

        :done
        rax <- %sum
        return
    )
    (@go
        0
        mem rsp -8 <- :ret_main
        rdi <- 1000
        call @modsum 1
        :ret_main
        rdi <- rax
        rdi <<= 1
        rdi += 1
        call print 1
        return
    )
)
