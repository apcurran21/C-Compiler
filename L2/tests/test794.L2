// Tests a number for primality
(@main
(@sqrt_ceil
 1
 %n<- rdi
 %sqrt <- 1
 :sqrt_start
 %newVariable12 <- %sqrt
 %newVariable12 *= %newVariable12
 rdi <- %n
 cjump rdi < %newVariable12 :sqrt_end
 %sqrt += 1
 goto :sqrt_start
 :sqrt_end
 rax <- %sqrt
 return
 )
(@mod
  2
  :divloop
  cjump rdi < rsi :divend
  rdi -= rsi
  goto :divloop
  :divend
  rax <- rdi
  return
 )
 (@primetest
   1
   %n<- rdi
   %div <- 2
   rdi <- %n
   mem rsp -8 <- :sqrt_ret2
   call @sqrt_ceil 1
   :sqrt_ret2
   %sqrt_n<- rax
   rdi <- %div
   :primetest_loop
   rdi <- %n
   rsi <- %div
   mem rsp -8 <- :mod_ret
   call @mod 2
   :mod_ret
   cjump rax = 0 :iscomposite
   %div += 1
   rsi <- %div
   rdi <- %sqrt_n
   cjump rdi < rsi :isprime
   goto :primetest_loop
   :isprime
   rax <- 1
   return
   :iscomposite
   rax <- 0
   return
  )
 (@main
  0
  %n <- 289
  rdi <- %n
  rdi <<= 1
  rdi++
  call print 1
  rdi <- %n
  mem rsp -8 <- :primetest_ret
  call @primetest 1
  :primetest_ret
  rdi <- rax
  rdi <<= 1
  rdi ++
  call print 1
  return
  )
)
