// Test 1
// Goal: Fill an array of length 20 with odd numbers not divisible by 3 starting at 0, using variables

(@go 
	(@go
0
		// Initialize the array with 0s
		rdi <- 41
		rsi <- 1
		call allocate 2	
			
		// Counter 
		%constraint <- 10 
		%constraint <<= 1
		%constraint ++
		%counter <- 0
		:loop
		//%val is the value to store
		//%val encoded so shift by 2 
		%val <- %counter 
		%val <<= 2
		%val++
		// variable for the %offset within the array
		%offset <- %counter
		%offset <<= 3
		// Start after the size element
		%offset += 8
		%offset += rax
		cjump %val <= %constraint :fill 
goto :stopFill

	
		:fill
		mem %offset 0 <- %val
		goto :incCount
		:stopFill
		mem %offset 0 <- 0
	
		:incCount
		%counter++
		
		cjump %counter < 20 :loop 
goto :continue 


		:continue
		rdi <- rax
		call print 1
		return
	)
)
