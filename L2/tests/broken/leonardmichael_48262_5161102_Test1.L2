// Specify rdi at the beginning
// Fill array with increasing uints from 0 to (decoded rdi)
// Walk array & print

(@go
 (@go
1
  rdi <- 7

  mem rsp -8 <- :populate_ree
%variableICV41LQ26Q <- rdi
  call @populate 1
  :populate_ree
rdi <- %variableICV41LQ26Q

  rsi <- rax
  mem rsp -8 <- :print_arr_ree
  call @print_arr 2
  :print_arr_ree

  return
  )

 (@populate
1
  %size <- rdi
  %count_to_write <- 1 // rdi already contains the %size
  rsi <- %count_to_write
  rdi <- %size
  call allocate 2
  %counter <- 0
  %write_ptr <- rax

  :write_val
  %write_ptr += 8 // r9 holds write location
  %encoded_counter <- %counter
  %encoded_counter <<= 1
  %encoded_counter += 1
  mem %write_ptr 0 <- %counter
  %counter += 1
  goto :check_count

  :check_count
  cjump %counter <= %size :write_val 
goto :out


  :out
  return
  )

 (@print_arr
2
%variable2F8TRY1Z0J <- %newVariable12
%variableFZ3ZVU0BND <- %newVariable13
%variableI816RHBLV6 <- %newVariable14

  %counter <- 0
  %size <- rdi
  %addr <- rsi

  :print_val
  %addr += 8
  %newVariable13 <- %addr
  rdi <- mem %newVariable13 0
  rdi <<= 1
  rdi += 1
  call print 1
  %counter += 1
  goto :count

  :count
  cjump %counter <= %size :print_val 
goto :get_out


  :get_out
  return
  )
 )
