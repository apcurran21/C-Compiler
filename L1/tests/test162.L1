(@main
(@main
	0 4
	rdi <- 11
	rsi <- 11
	call allocate 2
	rdi <- rax
	mem rsp 24 <- rdi
	rdi <- 7
	rsi <- 7
	call allocate 2
	rdi <- rax
	mem rsp 16 <- rdi
	rdi <- mem rsp 24
	rdi <- rdi
	rsi <- mem rsp 16
	rsi <- rsi
	mem rsp -8 <- :ret1
	call @concatenate 2
	:ret1
	rdi <- rax
	call print 1
	rdi <- mem rsp 16
	rdi <- rdi
	rsi <- mem rsp 24
	rsi <- rsi
	mem rsp -8 <- :ret2
	call @concatenate 2
	:ret2
	rdi <- rax
	call print 1
	return
)

(@concatenate
	2 14
	rdi <- rdi
	mem rsp 104 <- rdi
	rdi <- rsi
	mem rsp 88 <- rdi
	rdi <- mem rsp 104
	rdi <- mem rdi 0
	mem rsp 96 <- rdi
	rdi <- mem rsp 96
	rdi <<= 1
	mem rsp 96 <- rdi
	rdi <- mem rsp 96
	rdi++
	mem rsp 96 <- rdi
	rdi <- mem rsp 88
	rdi <- mem rdi 0
	mem rsp 80 <- rdi
	rdi <- mem rsp 80
	rdi <<= 1
	mem rsp 80 <- rdi
	rdi <- mem rsp 80
	rdi++
	mem rsp 80 <- rdi
	rdi <- mem rsp 96
	rsi <- rdi
	rsi--
	rdi <- mem rsp 80
	rsi += rdi
	rdi <- rsi
	rsi <- 1
	call allocate 2
	r8 <- rax
	rcx <- 1
	rdi <- mem rsp 104
	rdx <- rdi
	rsi <- r8
	rdx += 8
	rsi += 8
	:loop1
	rdi <- mem rdx 0
	mem rsi 0 <- rdi
	rcx += 2
	rdx += 8
	rsi += 8
	rdi <- mem rsp 96
	cjump rdi <= rcx :concatsecondarray 
goto :loop1

	:concatsecondarray
	rdi <- mem rsp 88
	rdx <- rdi
	rdx += 8
	rcx <- 1
	:loop2
	rdi <- mem rdx 0
	mem rsi 0 <- rdi
	rcx += 2
	rdx += 8
	rsi += 8
	rdi <- mem rsp 80
	cjump rdi <= rcx :done 
goto :loop2

	:done
	rax <- r8
	return
)

)
