(@go
(@fibonacci
	1 0
	cjump rdi = 1 :fibonacciInitialCondition
	cjump rdi = 2 :fibonacciInitialCondition
	rsi <- 1
	r8 <- 1
	rdx <- 3
	:fibonacciFor
	cjump rdx <= rdi :fibonacciForIntoLoop
	rax <- rcx
	return
	:fibonacciForIntoLoop
	rcx <- rsi
	rcx += r8
	rsi <- r8
	r8 <- rcx
	rdx++
	cjump 1 = 1 :fibonacciFor
	:fibonacciInitialCondition
	rax <- 1
	return
)

(@go
	0 0
	mem rsp -8 <- :goCallsFibonacciReturn
	rdi <- 20
	call @fibonacci 1
	:goCallsFibonacciReturn
	rdi <- rax
	rdi <<= 1
	rdi += 1
	call print 1
	return
)

)
