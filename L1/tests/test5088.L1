// Recursively calculate the nth fib number

(@go
  (@go
    0 0

    rdi <- 15

    mem rsp -8 <- :fib_ret
    call @fib 1
    :fib_ret

    rdi <- rax
    call print 1

    return
  )

  (@fib
    1 1

    // jump if == 0
    cjump rdi = 1 :BASE_0
    // jump if == 1
    cjump rdi = 3 :BASE_1

    // recursive
    // n >= 2
    rdi -= 2
    mem rsp 0 <- rdi

    // first recursive call
    mem rsp -8 <- :fib_ret1
    call @fib 1
    :fib_ret1

    // load previously saved rdi
    rdi <- mem rsp 0
    rdi -= 2

    // fetch return value from first recursive
    mem rsp 0 <- rax

    // second recursive call
    mem rsp -8 <- :fib_ret2
    call @fib 1
    :fib_ret2

    rax += mem rsp 0
    rax -= 1

    return

    :BASE_0
    // n = 1
    rax <- 1

    return

    :BASE_1
    // n = 1
    rax <- 3

    return
  )
)
