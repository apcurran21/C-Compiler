(@go
    (@go
        0 1
        rdi <- 11
        rsi <- 5
        call allocate 2
        mem rsp 0 <- rax
        rdi <- rax
        rdi += 8
        mem rdi 0 <- 3
        rdi += 8
        mem rdi 0 <- 5
        rdi += 8
        mem rdi 0 <- 7
        rdi += 8
        mem rdi 0 <- 9
        rdi += 8
        mem rdi 0 <- 11
        rdi <- mem rsp 0
        mem rsp -8 <- :f_ret
        call @print_array 1
        :f_ret
        rdi <- mem rsp 0
        call print 1
        return)
 

    (@print_array
        1 2
        // save callee-save registers
        mem rsp 0 <- r12
        mem rsp 8 <- r13
        r12 <- mem rdi 0
        r13 <- rdi

        rdi <- r12
        mem rsp -8 <- :encode_ret
        call @encode 1
        :encode_ret
        rdi <- rax
        call print 1

        :loop
        r13 += 8
        cjump r12 = 0 :finish 
goto :cont


        :cont
        rdi <- mem r13 0
        call print 1
        r12 -= 1
        goto :loop

        :finish
        r12 <- mem rsp 0 
        r13 <- mem rsp 8 
        return)

    (@encode
        1 0
        rax <- rdi
        rax <<= 1
        rax += 1
        return))
