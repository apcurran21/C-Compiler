(@main
(@main
	0 2
	rdi <- 1900
	mem rsp 8 <- rdi
	rdi <- 2000
	mem rsp 0 <- rdi
	rdi <- mem rsp 8
	rdi <- rdi
	rsi <- mem rsp 0
	rsi <- rsi
	mem rsp -8 <- :ca_ret
	call @create_array 2
	:ca_ret
	rdi <- rax
	rsi <- mem rsp 8
	rsi <- rsi
	rdx <- mem rsp 0
	rdx <- rdx
	mem rsp -8 <- :fa_ret
	call @fill_array 3
	:fa_ret
	rdi <- rax
	call print 1
	return
)

(@create_array
	2 0
	rsi <- rsi
	rsi -= rdi
	rsi >>= 2
	rsi++
	rsi <<= 1
	rsi++
	rdi <- rsi
	rsi <- 1
	call allocate 2
	return
)

(@fill_array
	3 4
	rsi <- rsi
	mem rsp 16 <- rsi
	rsi <- rdi
	mem rsp 8 <- rsi
	rdi <- rdi
	mem rsp 0 <- rdi
	rdi <- rdx
	mem rsp 24 <- rdi
	:loop_start
	rsi <- mem rsp 16
	rdi <- mem rsp 24
	cjump rsi <= rdi :calc 
goto :ret

	:calc
	rdi <- mem rsp 16
	rdi <- rdi
	mem rsp -8 <- :ily_ret
	call @is_leap_year 1
	:ily_ret
	cjump 1 = rax :leap 
goto :not_leap

	:not_leap
	goto :continue_loop
	:leap
	rdi <- mem rsp 16
	rsi <- rdi
	rsi <<= 1
	rsi++
	rdi <- mem rsp 8
	rdi += 8
	mem rsp 8 <- rdi
	rdi <- mem rsp 8
	mem rdi 0 <- rsi
	:continue_loop
	rdi <- mem rsp 16
	rdi += 1
	mem rsp 16 <- rdi
	goto :loop_start
	:ret
	rdi <- mem rsp 0
	rax <- rdi
	return
)

(@is_leap_year
	1 0
	rdi <- rdi
	rsi <- rdi
	rsi &= 15
	cjump 0 = rsi :yes 
goto :may_not_leap

	:may_not_leap
	rsi <- rdi
	rsi >>= 2
	:loop_mod_25
	cjump 25 = rsi :no 
goto :minus_25

	:minus_25
	cjump 25 < rsi :loop_minus_25 
goto :may_leap

	:loop_minus_25
	rsi -= 25
	goto :loop_mod_25
	:may_leap
	rsi <- rdi
	rsi &= 3
	cjump 0 = rsi :yes 
goto :no

	:yes
	rax <- 1
	return
	:no
	rax <- 0
	return
)

)
