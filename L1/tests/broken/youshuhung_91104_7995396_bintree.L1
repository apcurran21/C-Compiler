(@main

 (@is_empty 1 0
            rax <- rdi
            rax &= 1
            return)

 (@insert 2 2
          mem rsp 0 <- rdi
          mem rsp 8 <- rsi

          mem rsp -8 <- :kappa_1
          call @is_empty 1
          :kappa_1

          cjump 0 = rax :kappa_insert_recur
          :kappa_new
          rdi <- 7
          rsi <- 1
          call allocate 2
          rdx <- mem rsp 8
          mem rax 16 <- rdx
          return

          :kappa_insert_recur
          rdi <- mem rsp 0
          rdx <- mem rdi 16
          rcx <- mem rsp 8
          cjump rcx < rdx :kappa_lt
          cjump rdx < rcx :kappa_gt
          goto :kappa_eq

          :kappa_lt
          rdi <- 7
          rsi <- 1
          call allocate 2
          rdx <- mem rsp 0
          r10 <- mem rdx 16
          r11 <- mem rdx 24
          mem rsp 0 <- rax
          mem rax 16 <- r10
          mem rax 24 <- r11

          mem rsp -8 <- :kappa_2
          rdi <- mem rdx 8
          rsi <- mem rsp 8
          call @insert 2
          :kappa_2
          rdx <- rax
          rax <- mem rsp 0
          mem rax 8 <- rdx
          return

          :kappa_gt
          rdi <- 7
          rsi <- 1
          call allocate 2
          rdx <- mem rsp 0
          r11 <- mem rdx 8
          r10 <- mem rdx 16
          mem rsp 0 <- rax
          mem rax 8 <- r11
          mem rax 16 <- r10

          mem rsp -8 <- :kappa_3
          rdi <- mem rdx 24
          rsi <- mem rsp 8
          call @insert 2
          :kappa_3
          rdx <- rax
          rax <- mem rsp 0
          mem rax 24 <- rdx
          return

          :kappa_eq
          rax <- rdi
          return)

 (@inorder 1 1
           mem rsp 0 <- rdi

           mem rsp -8 <- :kappa_4
           call @is_empty 1
           :kappa_4
           cjump 0 = rax :kappa_inorder_recur
           return

           :kappa_inorder_recur
           rax <- mem rsp 0
           rdi <- mem rax 8
           mem rsp -8 <- :kappa_5
           call @inorder 1
           :kappa_5

           rax <- mem rsp 0
           rdi <- mem rax 16
           call print 1

           rax <- mem rsp 0
           rdi <- mem rax 24
           mem rsp -8 <- :kappa_6
           call @inorder 1
           :kappa_6

           return)

 (@main 0 1

        rdi <- 1
        rsi <- 21
        mem rsp -8 <- :k1
        call @insert 2
        :k1
        rdi <- rax
        rsi <- 11
        mem rsp -8 <- :k2
        call @insert 2
        :k2
        rdi <- rax
        rsi <- 15
        mem rsp -8 <- :k3
        call @insert 2
        :k3
        rdi <- rax
        rsi <- 25
        mem rsp -8 <- :k4
        call @insert 2
        :k4
        rdi <- rax
        rsi <- 31
        mem rsp -8 <- :k5
        call @insert 2
        :k5
        rdi <- rax
        rsi <- 7
        mem rsp -8 <- :k6
        call @insert 2
        :k6
        rdi <- rax
        rsi <- 27
        mem rsp -8 <- :k7
        call @insert 2
        :k7

        mem rsp 0 <- rax
        rdi <- rax
        call print 1

        mem rsp -8 <- :kappa_9999
        rdi <- mem rsp 0
        call @inorder 1
        :kappa_9999

        return))
