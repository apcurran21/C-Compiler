(@printArray
(@printArray
	1 2
	rsi <- rdi
	mem rsp 8 <- rsi
	rdi &= 1
	cjump rdi = 0 :isArr 
goto :notArr

	:notArr
	rax <- 0
	return
	:isArr
	rsi <- 0
	rdi <- mem rsp 8
	rdi <- mem rdi 0
	mem rsp 0 <- rdi
	rdi <- mem rsp 0
	cjump rsi = rdi :endLoop 
goto :loopArr

	:loopArr
	rdi <- mem rsp 8
	rdi <- rdi
	mem rsp -8 <- :elemRet
	call @printArrayElement 2
	:elemRet
	rsi++
	rdi <- mem rsp 0
	cjump rsi < rdi :loopArr 
goto :endLoop

	:endLoop
	rax <- 1
	return
)

(@printArrayElement
	2 7
	rdi <- rdi
	mem rsp 48 <- rdi
	rdi <- rsi
	mem rsp 40 <- rdi
	rdi <- mem rsp 40
	rdi <- rdi
	rdi <<= 1
	rdi++
	call print 1
	rdi <- mem rsp 40
	rdi <- rdi
	rdi *= 8
	rdi += 8
	rsi <- rdi
	mem rsp 32 <- rsi
	rdi <<= 1
	rdi++
	call print 1
	rdi <- mem rsp 48
	rdi <- rdi
	rsi <- mem rsp 32
	rdi += rsi
	rdi <- mem rdi 0
	rsi <- rdi
	rdi &= 1
	cjump rdi = 0 :isArr2 
goto :notArr2

	:isArr2
	rdi <- rsi
	mem rsp -8 <- :recPrintArr
	call @printArray 1
	:recPrintArr
	return
	:notArr2
	rdi <- rsi
	call print 1
	return
)

)
