(@go
(@go
	0 0
	rdi <- 11
	rsi <- 5
	call allocate 2
	rdi <- rax
	rsi <- rax
	rsi += 8
	mem rsi 0 <- 3
	rsi += 8
	mem rsi 0 <- 5
	rsi += 8
	mem rsi 0 <- 7
	rsi += 8
	mem rsi 0 <- 9
	rsi += 8
	mem rsi 0 <- 11
	rdi <- rdi
	mem rsp -8 <- :f_ret
	call @reverse_array 1
	:f_ret
	rdi <- rax
	call print 1
	return
)

(@reverse_array
	1 2
	mem rsp 8 <- r15
	mem rsp 0 <- r14
	r15 <- r12
	r14 <- r13
	r12 <- mem rdi 0
	r13 <- rdi
	rdi <- r12
	mem rsp -8 <- :encode_ret
	call @encode 1
	:encode_ret
	rdi <- rax
	rsi <- 0
	call allocate 2
	rcx @ rax r12 8
	rsi <- r13
	:loop
	rsi += 8
	cjump r12 = 0 :finish
	goto :cont
	:cont
	rdi <- mem rsi 0
	mem rcx 0 <- rdi
	r12 -= 1
	rcx -= 8
	goto :loop
	:finish
	r12 <- r15
	r13 <- r14
	r14 <- mem rsp 0
	r15 <- mem rsp 8
	return
)

(@encode
	1 0
	rax <- rdi
	rax <<= 1
	rax += 1
	return
)

)
