(@go
(@go
	0 0
	rdi <- 25
	rsi <- 21
	mem rsp -8 <- :collatz_ret1
	call @collatz 2
	:collatz_ret1
	rdi <- rax
	call print 1
	rdi <- 39
	rsi <- 43
	mem rsp -8 <- :collatz_ret2
	call @collatz 2
	:collatz_ret2
	rdi <- rax
	call print 1
	rdi <- 55
	rsi <- 225
	mem rsp -8 <- :collatz_ret3
	call @collatz 2
	:collatz_ret3
	rdi <- rax
	call print 1
	rdi <- 1743
	rsi <- 241
	mem rsp -8 <- :collatz_ret4
	call @collatz 2
	:collatz_ret4
	rdi <- rax
	call print 1
	return
)

(@collatz
	2 7
	rdi <- rdi
	mem rsp 40 <- rdi
	rdi <- rsi
	mem rsp 48 <- rdi
	rdi <- mem rsp 40
	cjump rdi <= 1 :done 
goto :next

	:next
	rdi <- mem rsp 48
	cjump rdi <= 1 :done 
goto :allocate

	:allocate
	rdi <- mem rsp 48
	rdi <- rdi
	rsi <- 1
	call allocate 2
	rdx <- rax
	rdi <- rax
	rdi += 8
	rsi <- mem rsp 48
	rsi *= 8
	mem rsp 48 <- rsi
	rsi <- mem rsp 48
	rsi += rdx
	mem rsp 48 <- rsi
	:loop
	rsi <- mem rsp 40
	mem rdi 0 <- rsi
	rdi += 8
	rsi <- mem rsp 48
	cjump rsi < rdi :done 
goto :check

	:check
	rsi <- mem rsp 40
	cjump rsi <= 3 :done 
goto :continue

	:continue
	rsi <- mem rsp 40
	rsi <- rsi
	rsi &= 3
	cjump rsi = 1 :even 
goto :odd

	:even
	rsi <- mem rsp 40
	rsi >>= 2
	mem rsp 40 <- rsi
	rsi <- mem rsp 40
	rsi <<= 1
	mem rsp 40 <- rsi
	rsi <- mem rsp 40
	rsi += 1
	mem rsp 40 <- rsi
	goto :loop
	:odd
	rsi <- mem rsp 40
	rsi--
	mem rsp 40 <- rsi
	rsi <- mem rsp 40
	rsi *= 3
	mem rsp 40 <- rsi
	rsi <- mem rsp 40
	rsi += 3
	mem rsp 40 <- rsi
	goto :loop
	:done
	rax <- rdx
	return
)

)
