(@main
(@sqrt_ceil
	1 0
	rdx <- rdi
	rsi <- 1
	:sqrt_start
	r12 <- rsi
	r12 *= r12
	rdi <- rdx
	cjump rdi < r12 :sqrt_end
	rsi += 1
	goto :sqrt_start
	:sqrt_end
	rax <- rsi
	return
)

(@mod
	2 0
	:divloop
	cjump rdi < rsi :divend
	rdi -= rsi
	goto :divloop
	:divend
	rax <- rdi
	return
)

(@primetest
	1 3
	mem rsp 16 <- r14
	mem rsp 8 <- r13
	mem rsp 0 <- r12
	r12 <- rdi
	r13 <- 2
	rdi <- r12
	mem rsp -8 <- :sqrt_ret2
	call @sqrt_ceil 1
	:sqrt_ret2
	r14 <- rax
	rdi <- r13
	:primetest_loop
	rdi <- r12
	rsi <- r13
	mem rsp -8 <- :mod_ret
	call @mod 2
	:mod_ret
	cjump rax = 0 :iscomposite
	r13 += 1
	rsi <- r13
	rdi <- r14
	cjump rdi < rsi :isprime
	goto :primetest_loop
	:isprime
	rax <- 1
	r12 <- mem rsp 0
	r13 <- mem rsp 8
	r14 <- mem rsp 16
	return
	:iscomposite
	rax <- 0
	r12 <- mem rsp 0
	r13 <- mem rsp 8
	r14 <- mem rsp 16
	return
)

(@main
	0 1
	mem rsp 0 <- r12
	r12 <- 289
	rdi <- r12
	rdi <<= 1
	rdi++
	call print 1
	rdi <- r12
	mem rsp -8 <- :primetest_ret
	call @primetest 1
	:primetest_ret
	rdi <- rax
	rdi <<= 1
	rdi++
	call print 1
	r12 <- mem rsp 0
	return
)

)
