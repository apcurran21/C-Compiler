(@go
(@go
	0 0
	rdi <- 5
	rsi <- 85
	mem rsp -8 <- :f_ret_1
	call allocate 2
	:f_ret_1
	mem rax 16 <- 5
	rdi <- rax
	mem rsp -8 <- :f_ret_2
	call @printArraySum 1
	:f_ret_2
	return
)

(@printArraySum
	1 0
	rsi <- rdi
	rsi &= 1
	cjump rsi = 0 :isArray
	goto :notArray
	:notArray
	rax <- -1
	return
	:isArray
	rcx <- 0
	rsi <- rdi
	rdx <- mem rdi 0
	rdi <- rdx
	rdi <<= 1
	rdi += 1
	r8 <- 0
	:loop
	cjump rcx < rdx :continue
	goto :exit
	:continue
	rdi <- rcx
	rdi <<= 1
	rdi += 1
	rsi += 8
	rdi <- mem rsi 0
	rdi <- rdi
	rdi >>= 1
	r8 += rdi
	rcx++
	goto :loop
	:exit
	rdi <- r8
	rdi <<= 1
	rdi += 1
	call print 1
	rax <- 1
	return
)

)
