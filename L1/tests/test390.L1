(@go
(@go
	0 0
	rdi <- 5
	rsi <- 5
	call allocate 2
	mem rax 8 <- 85
	rdi <- rax
	mem rsp -8 <- :printArray_ret
	call @printArray 1
	:printArray_ret
	return
)

(@printArray
	1 3
	mem rsp 16 <- r14
	mem rsp 8 <- r13
	mem rsp 0 <- r12
	r13 <- rdi
	rsi <- r13
	rsi &= 1
	cjump rsi = 1 :not_array
	goto :array
	:array
	r14 <- 0
	r12 <- mem rdi 0
	:startLoop
	cjump r14 < r12 :loopBody
	goto :return
	:loopBody
	rdi <- r13
	rsi <- r14
	mem rsp -8 <- :printArrayElement_ret
	call @printArrayElement 2
	:printArrayElement_ret
	r14++
	goto :startLoop
	:return
	rax <- 1
	r12 <- mem rsp 0
	r13 <- mem rsp 8
	r14 <- mem rsp 16
	return
	:not_array
	rax <- 0
	r12 <- mem rsp 0
	r13 <- mem rsp 8
	r14 <- mem rsp 16
	return
)

(@printArrayElement
	2 2
	mem rsp 8 <- r13
	mem rsp 0 <- r12
	r12 <- rdi
	r13 <- rsi
	rdi <- r13
	rdi <<= 1
	rdi += 1
	call print 1
	rdi <- r13
	rdi <<= 3
	rdi += 8
	r13 <- rdi
	rdi <<= 1
	rdi += 1
	call print 1
	r12 += r13
	rsi <- mem r12 0
	rdi <- rsi
	rdi &= 1
	cjump rdi = 1 :not_an_array
	goto :else
	:not_an_array
	rdi <- rsi
	call print 1
	r12 <- mem rsp 0
	r13 <- mem rsp 8
	return
	:else
	rdi <- rsi
	mem rsp -8 <- :printArray_return
	call @printArray 1
	:printArray_return
	r12 <- mem rsp 0
	r13 <- mem rsp 8
	return
)

)
