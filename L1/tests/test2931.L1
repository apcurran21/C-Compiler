(@matrix
(@matrix
	0 5
	rdi <- 9
	mem rsp 0 <- rdi
	rdi <- 7
	mem rsp 8 <- rdi
	rdi <- mem rsp 0
	cjump rdi <= 1 :abort
	rdi <- mem rsp 8
	cjump rdi <= 1 :abort
	rdi <- mem rsp 0
	rdi <- rdi
	rsi <- 1
	call allocate 2
	rdi <- rax
	mem rsp 32 <- rdi
	rax += 8
	rdi <- rax
	mem rsp 16 <- rdi
	:gen_rows
	rdi <- mem rsp 0
	cjump rdi <= 1 :fill
	rdi <- mem rsp 8
	rdi <- rdi
	rsi <- 1
	call allocate 2
	rdi <- mem rsp 16
	mem rdi 0 <- rax
	rdi <- mem rsp 16
	rdi += 8
	mem rsp 16 <- rdi
	rdi <- mem rsp 0
	rdi -= 2
	mem rsp 0 <- rdi
	goto :gen_rows
	:fill
	rdi <- mem rsp 16
	rdi -= 8
	mem rsp 16 <- rdi
	rdi <- mem rsp 32
	rdi <- mem rdi 0
	mem rsp 0 <- rdi
	rdi <- mem rsp 32
	rdi <- mem rdi 8
	mem rsp 8 <- rdi
	rdi <- mem rsp 8
	rdi <- mem rdi 0
	mem rsp 8 <- rdi
	rdi <- mem rsp 0
	rdi <- rdi
	mem rsp 24 <- rdi
	rdi <- mem rsp 8
	rsi <- mem rsp 24
	rsi *= rdi
	mem rsp 24 <- rsi
	rdi <- mem rsp 24
	rdi <<= 1
	mem rsp 24 <- rdi
	rdi <- mem rsp 24
	rdi++
	mem rsp 24 <- rdi
	rdi <- mem rsp 24
	rdi <- rdi
	call print 1
	:outer_loop
	rsi <- mem rsp 16
	rdi <- mem rsp 32
	cjump rsi <= rdi :end
	rdi <- mem rsp 16
	rdx <- mem rdi 0
	rdi <- mem rsp 8
	rdi <- rdi
	rdi *= 8
	rdx += rdi
	rdi <- mem rsp 16
	rsi <- mem rdi 0
	:inner_loop
	cjump rdx <= rsi :end_inner
	rdi <- mem rsp 24
	mem rdx 0 <- rdi
	rdx -= 8
	rdi <- mem rsp 24
	rdi -= 2
	mem rsp 24 <- rdi
	goto :inner_loop
	:end_inner
	rdi <- mem rsp 16
	rdi -= 8
	mem rsp 16 <- rdi
	goto :outer_loop
	:end
	rdi <- mem rsp 32
	rdi <- rdi
	call print 1
	:abort
	return
)

)
