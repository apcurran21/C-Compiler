.text
.globl go
go:
pushq %rbx
pushq %rbp
pushq %r12
pushq %r13
pushq %r14
pushq %r15
call _main
popq %r15
popq %r14
popq %r13
popq %r12
popq %rbp
popq %rbx
retq
_main:
subq $8, %rsp
_entry_global_0:
movq $5, %r10
sarq $1, %r10
movq $5, %r10
sarq $1, %r10
movq %r10, %r11
movq %r11, %r11
imulq %r10, %r11
movq %r11, %r11
addq $2, %r11
movq %r11, %r11
salq $1, %r11
movq %r11, %r11
addq $1, %r11
movq %r11, %rdi
movq $1, %rsi
call allocate
movq %rax, %r10
movq %r10, 0(%rsp)
movq 0(%rsp), %r10
movq %r10, %rcx
addq $8, %rcx
movq $5, 0(%rcx)
movq 0(%rsp), %r10
movq %r10, %r9
addq $16, %r9
movq $5, 0(%r9)
movq $5, %r10
sarq $1, %r10
movq $5, %r10
sarq $1, %r10
movq %r10, %r11
movq %r11, %r11
imulq %r10, %r11
movq %r11, %r11
addq $2, %r11
movq %r11, %r11
salq $1, %r11
movq %r11, %r11
addq $1, %r11
movq %r11, %rdi
movq $1, %rsi
call allocate
movq %rax, %rdx
movq %rdx, %rcx
addq $8, %rcx
movq $5, 0(%rcx)
movq %rdx, %r9
addq $16, %r9
movq $5, 0(%r9)
movq 0(%rsp), %r10
movq %r10, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %r10
movq %r10, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $0, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $0, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %r10
movq %r10, %rcx
addq %rax, %rcx
movq $5, 0(%rcx)
movq 0(%rsp), %r10
movq %r10, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %r10
movq %r10, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $0, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $1, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %r10
movq %r10, %rcx
addq %rax, %rcx
movq $5, 0(%rcx)
movq 0(%rsp), %r10
movq %r10, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %r10
movq %r10, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $1, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $0, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %r10
movq %r10, %rcx
addq %rax, %rcx
movq $5, 0(%rcx)
movq 0(%rsp), %r10
movq %r10, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %r10
movq %r10, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $1, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $1, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %r10
movq %r10, %rcx
addq %rax, %rcx
movq $5, 0(%rcx)
movq %rdx, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq %rdx, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $0, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $0, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq %rdx, %rcx
addq %rax, %rcx
movq $5, 0(%rcx)
movq %rdx, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq %rdx, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $0, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $1, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq %rdx, %rcx
addq %rax, %rcx
movq $5, 0(%rcx)
movq %rdx, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq %rdx, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $1, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $0, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq %rdx, %rcx
addq %rax, %rcx
movq $5, 0(%rcx)
movq %rdx, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq %rdx, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $1, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $1, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq %rdx, %rcx
addq %rax, %rcx
movq $5, 0(%rcx)
movq $16, %rsi
movq 0(%rsp), %r10
movq %r10, %r11
addq %rsi, %r11
movq 0(%r11), %r10
movq $16, %rsi
movq %rdx, %r11
addq %rsi, %r11
movq 0(%r11), %r11
movq %r10, %r10
sarq $1, %r10
movq %r11, %r11
sarq $1, %r11
movq $-1, %rax
movq $0, %r8
jmp _outerloop_global_1
_outerloop_global_1:
movq %rax, %rax
addq $1, %rax
movq $0, %r8
cmpq %r10, %rax
sete %r9b
movzbq %r9b, %r9
cmpq $1, %r9
je _finish_global_3
jmp _innerloop_global_4
_finish_global_3:
movq 0(%rsp), %r10
movq %r10, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %r10
movq %r10, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $0, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $0, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %r10
movq %r10, %rcx
addq %rax, %rcx
movq 0(%rcx), %rax
movq %rax, %rax
salq $1, %rax
movq %rax, %rax
addq $1, %rax
movq %rax, %rdi
call print
movq 0(%rsp), %r10
movq %r10, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %r10
movq %r10, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $0, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $1, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %r10
movq %r10, %rcx
addq %rax, %rcx
movq 0(%rcx), %rax
movq %rax, %rax
salq $1, %rax
movq %rax, %rax
addq $1, %rax
movq %rax, %rdi
call print
movq 0(%rsp), %r10
movq %r10, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %r10
movq %r10, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $1, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $0, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %r10
movq %r10, %rcx
addq %rax, %rcx
movq 0(%rcx), %rax
movq %rax, %rax
salq $1, %rax
movq %rax, %rax
addq $1, %rax
movq %rax, %rdi
call print
movq 0(%rsp), %r10
movq %r10, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %r10
movq %r10, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq $1, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq $1, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %r10
movq %r10, %rcx
addq %rax, %rcx
movq 0(%rcx), %rax
movq %rax, %rax
salq $1, %rax
movq %rax, %rax
addq $1, %rax
movq %rax, %rdi
call print
addq $8, %rsp
retq
_innerloop_global_4:
cmpq %r11, %r8
sete %r9b
movzbq %r9b, %r9
cmpq $1, %r9
je _outerloop_global_1
jmp _continue_global_8
_continue_global_8:
movq 0(%rsp), %r9
movq %r9, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %r9
movq %r9, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq %rax, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %r8, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %r9
movq %r9, %rcx
addq %rax, %rcx
movq 0(%rcx), %r9
movq %rdx, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq %rdx, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq %rax, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %r8, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq %rdx, %rcx
addq %rax, %rcx
movq 0(%rcx), %rcx
movq %r9, %r9
addq %rcx, %r9
movq 0(%rsp), %rcx
movq %rcx, %rcx
addq $8, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq 0(%rsp), %rcx
movq %rcx, %rcx
addq $16, %rcx
movq 0(%rcx), %rcx
movq %rcx, %rcx
sarq $1, %rcx
movq $0, %rsi
movq %rax, %rax
movq %rax, %rax
imulq %rcx, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %r8, %rax
movq %rsi, %rsi
addq %rax, %rsi
movq %rsi, %rax
imulq $8, %rax
movq %rax, %rax
addq $24, %rax
movq 0(%rsp), %rcx
movq %rcx, %rcx
addq %rax, %rcx
movq %r9, 0(%rcx)
movq %r8, %r8
addq $1, %r8
jmp _innerloop_global_4
