define void @main () {
	:entry
	int64 %var1
	int64 %var2
	int64 %var3
	int64 %var4
	int64 %ret

	%var1 <- 3
	%var2 <- 6
	%var3 <- 8
	%var4 <- 90

	%ret <- call @odd (%var1)
	%ret <- %ret << 1
    %ret <- %ret + 1
	call print(%ret)
	%ret <- call @odd (%var2)
	%ret <- %ret << 1
    %ret <- %ret + 1
	call print(%ret)
	%ret <- call @odd (%var3)
	%ret <- %ret << 1
    %ret <- %ret + 1
	call print(%ret)
	%ret <- call @odd (%var4)
	%ret <- %ret << 1
    %ret <- %ret + 1
	call print(%ret)
	%ret <- call @even (%var1)
	%ret <- %ret << 1
    %ret <- %ret + 1
	call print(%ret)
	%ret <- call @even (%var2)
	%ret <- %ret << 1
    %ret <- %ret + 1
	call print(%ret)
	%ret <- call @even (%var3)
	%ret <- %ret << 1
    %ret <- %ret + 1
	call print(%ret)
	%ret <- call @even (%var4)
	%ret <- %ret << 1
    %ret <- %ret + 1
	call print(%ret)

	return
}



define int64 @odd (int64 %var1) {
	:loop
	int64 %test
	int64 %ret
	%test <- %var1 < 1
	br %test :wrong :ok
	:ok
	%test <- %var1 = 1
	br %test :correct :ok2
	:ok2
	%var1 <- %var1 - 2
	br :loop
	:wrong
	%ret <- 0
	return %ret
	:correct
	%ret <- 1
	return %ret
}
define int64 @even (int64 %var1) {
	:loop1
	int64 %test
	int64 %ret
	%test <- %var1 < 0
	br %test :odd1 :ok2
	:ok2
	%test <- %var1 = 0
	br %test :correct1 :ok3
	:ok3
	%var1 <- %var1 - 2
	br :loop1
	:odd1
	%ret <- 0
	return %ret
	:correct1
	%ret <- 1
	return %ret
}
