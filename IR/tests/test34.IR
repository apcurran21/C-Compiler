define void @main () {
    :begin_main
    int64[] %number
    int64 %tempNumber
    int64 %retVal

    %number <- new Array(7)
    %tempNumber <- length %number 0

    %retVal <- call @op1 (1)
    %number[0] <- %retVal
    %tempNumber <- %tempNumber + 8

    %retVal <- call @op1 (2)
    %number[1] <- %retVal
    %tempNumber <- %tempNumber + 8

    %retVal <- call @op2 (3)
    %number[2] <- %retVal
    %tempNumber <- %tempNumber + 8

    %retVal <- call @op3 (4)
    %number[3] <- %retVal
    %tempNumber <- %tempNumber + 8

    %retVal <- call @op4 (5)
    %number[4] <- %retVal
    %tempNumber <- %tempNumber + 8

    %retVal <- call @op5 (6)
    %number[5] <- %retVal
    %tempNumber <- %tempNumber + 8

    %retVal <- call @op6 (7)
    %number[6] <- %retVal
    %tempNumber <- %tempNumber + 8

    call @printArr (%number)
    return
}

define int64 @op1 (int64 %number) {
    :begin1
    int64[] %temp_spot
    int64 %number2
    int64[] %num_array
    int64[] %arr
    int64 %arr_elem

    %temp_spot <- new Array(3)
    %temp_spot[0] <- %number

    %number <- %number < 1
    %num_array <- new Array(5)
    %arr <- new Array(3)
    %arr_elem <- %arr[0]

    %number <- %temp_spot[0]
    return %number
}

define int64 @op2 (int64 %number) {
    :begin2
    int64[] %temp_spot
    int64 %number2
    int64[] %num_array

    %temp_spot <- new Array(3)
    %temp_spot[0] <- %number
    %number <- %number < 1
    %num_array <- new Array(5)
    %number <- %temp_spot[0]
    return %number
}

define int64 @op3 (int64 %number) {
    :begin3
    int64[] %temp_spot
    int64 %number2
    int64[] %num_array

    %temp_spot <- new Array(3)
    %temp_spot[0] <- %number
    %number <- %number < 1
    %num_array <- new Array(5)
    %number <- %number * 200000
    %number <- %temp_spot[0]
    return %number
}

define int64 @op4 (int64 %number) {
    :begin4
    int64[] %temp_spot
    int64 %number2
    int64[] %num_array
    int64[][][] %threeD
    int64 %first_dimension_length
    int64 %second_dimension_length
    int64 %third_dimension_length

    %temp_spot <- new Array(3)
    %temp_spot[0] <- %number
    %number <- %number < 1
    %num_array <- new Array(5)
    %number <- %temp_spot[0]
    %threeD <- new Array(6,6,6)
    %first_dimension_length <- length %threeD 0
    %second_dimension_length <- length %threeD 1
    %third_dimension_length <- length %threeD 2
    return %number
}

define int64 @op5 (int64 %number) {
    :begin5
    
    return %number
}

define int64 @op6 (int64 %number) {
    :begin6
    int64[] %temp_spot
    int64[] %num_array

    %temp_spot <- new Array(3)
    %temp_spot[0] <- %number
    %number <- %number < 1
    %num_array <- new Array(5)
    %number <- %temp_spot[0]
    return %number
}

define void @printArr (int64[] %num_array) {
    :begin_print
    int64 %comp
    int64 %count
    int64 %number

    %count <- 0

    br :top
    :top

    %comp <- %count = 7
    br %comp :end :print_num

    :print_num
    %number <- %num_array[%count]
    %number <- %number << 1
    %number <- %number + 1
    call print (%number)

    %count <- %count + 1

    br :top

    :end

    return
}
