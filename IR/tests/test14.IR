define void @main ( ){

  :entry
  tuple %t
  int64 %v
  %t <- call @createTuple(3)
  %v <- call @myF(%t, 4)
  %v <- call @encodeValue(%v)
  call print(%v)
  return 

}

define tuple @createTuple (int64 %p1){

  :entry
  int64 %x2
  tuple %p
  %x2 <- 21
  %p <- new Tuple(9)
  %p[0] <- 0
  %p[1] <- 1
  %p[2] <- %p1
  %p[3] <- %x2
  return %p

}

define int64 @myF (tuple %c, int64 %p1){

  :entry
  int64 %x1
  int64 %x2
  int64 %encodedX1
  int64 %encodedX2
  int64 %encodedP1
  %x1 <- %c[2]
  %x2 <- %c[3]
  %encodedX1 <- call @encodeValue(%x1)
  call print(%encodedX1)
  %encodedX2 <- call @encodeValue(%x2)
  call print(%encodedX2)
  %encodedP1 <- call @encodeValue(%p1)
  call print(%encodedP1)
  int64 %r1
  int64 %r2
  int64 %encodedR1
  %r1 <- %x1 + %x2
  %encodedR1 <- call @encodeValue(%r1)
  call print(%encodedR1)
  %r2 <- %r1 + %p1
  return %r2

}

define int64 @encodeValue (int64 %v){

  :entry
  int64 %encodedV
  %encodedV <- %v
  %encodedV <- %encodedV << 1
  %encodedV <- %encodedV + 1
  return %encodedV

}
