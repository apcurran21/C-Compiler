define void @main() {
	:EntryPoint
	int64 %len
	%len <- 10

	int64[] %arr
	%arr <- call @GetArray(%len)
	call print(%arr)

	int64 %res
	%res <- call @FindPeak(%arr, %len)

	call @PrintResult(%res)

	return 
}

define int64[] @GetArray(int64 %len) {
	:EntryPoint
	%len <- %len << 1
	%len <- %len + 1

	int64[] %arr
	%arr <- new Array(%len)

	int64 %x
	%x <- 1
	%x <- %x << 1
	%x <- %x + 1
	%arr[0] <- %x

	
	%x <- 2
	%x <- %x << 1
	%x <- %x + 1
	%arr[1] <- %x

	
	%x <- 3
	%x <- %x << 1
	%x <- %x + 1
	%arr[2] <- %x

	
	%x <- 5
	%x <- %x << 1
	%x <- %x + 1
	%arr[3] <- %x

	
	%x <- 1
	%x <- %x << 1
	%x <- %x + 1
	%arr[4] <- %x

	
	%x <- 3
	%x <- %x << 1
	%x <- %x + 1
	%arr[5] <- %x

	
	%x <- 2
	%x <- %x << 1
	%x <- %x + 1
	%arr[6] <- %x

	
	%x <- 10
	%x <- %x << 1
	%x <- %x + 1
	%arr[7] <- %x

	
	%x <- 11
	%x <- %x << 1
	%x <- %x + 1
	%arr[8] <- %x

	
	%x <- 8
	%x <- %x << 1
	%x <- %x + 1
	%arr[9] <- %x

	return %arr
}


define int64 @FindPeak(int64[] %arr, int64 %len) {
	:EntryPoint
	int64 %max
	int64 %ind
	int64 %loopEnded
	int64 %cur
	int64 %notMax
	%max <- 0
	%ind <- 0
	br :LoopStart

	:LoopStart
	%loopEnded <- %ind >= %len
	br %loopEnded :LoopEnd :LoopContinue

	:LoopContinue
	%cur <- %arr[%ind]
	%notMax <- %max >= %cur
	br %notMax :Continue :SetMax

	:SetMax
	%max <- %cur
	br :Continue

	:Continue
	%ind <- %ind + 1
	br :LoopStart

	:LoopEnd
	return %max
}

define void @PrintResult(int64 %res) {
	:EntryPoint
	call print(%res)
	return
}
