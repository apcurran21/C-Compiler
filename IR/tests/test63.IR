define void @main () {
	:entry
	int64[][][] %m
	int64 %r
	int64 %v

	%v <- 21
	%m <- new Array(21, 21, 21)

	%r <- call @search(%m, %v)
	call print(%r)

	%m[0][0][0] <- %v

	%r <- call @search(%m, %v)
	call print(%r)

	return
}

define int64 @search(int64[][][] %m, int64 %v) {
	:entry
	int64 %length1
	int64 %length2
	int64 %length3
	int64 %encLen
	int64 %i
	int64 %j
	int64 %k
	int64 %found
	int64 %checki
	int64 %checkj
	int64 %checkk
	int64 %e
	int64 %same

	%encLen <- length %m 0
	call print(%encLen)
	%length1 <- %encLen >> 1

	%encLen <- length %m 1
	call print(%encLen)
	%length2 <- %encLen >> 1
	
	%encLen <- length %m 2
	call print(%encLen)
	%length3 <- %encLen >> 1
	br :init

	:init
	%found <- 1
	%i <- 0

	br :outerHeader

	:outerHeader
	%checki <- %i < %length1
	br %checki :outerBody :return

	:outerBody
	%j <- 0
	br :middleHeader

	:middleHeader
	%checkj <- %j < %length2
	br %checkj :middleBody :outerFooter

	:middleBody
	%k <- 0
	br :innerHeader

	:innerHeader
	%checkk <- %k < %length3
	br %checkk :innerBody :middleFooter

	:innerBody
	%e <- %m[%i][%j][%k]
	%same <- %e = %v
	br %same :setFound :innerFooter

	:innerFooter
	%k <- %k + 1
	br :innerHeader

	:middleFooter
	%j <- %j + 1
	br :middleHeader

	:outerFooter
	%i <- %i + 1
	br :outerHeader

	:setFound
	%found <- 3
	br :return

	:return
	return %found
}
