define void @main() {
	:entryPoint
	int64 %x
	int64 %y
	int64 %result1
	%x <- 3
	%y <- 3
	%result1 <- call @findGCD(%x, %y)

	int64 %x2
	int64 %y2
	int64 %result2
	%x2 <- 30
	%y2 <- 50

	%result2 <- call @findGCD(%x2, %y2)

	int64 %x3
	int64 %y3
	int64 %result3
	%x3 <- 75
	%y3 <- 80
	%result3 <- call @findGCD(%x3, %y3)
	return
}

define void @findGCD(int64 %a, int64 %b) {
	:TestNumbers
	int64 %isLesser
	int64 %isEqual
	%isLesser <- %a < %b
	br %isLesser :Lesser :NotLesser

	:NotLesser
	%isEqual <- %a = %b
	br %isEqual :Equal :Greater

	:Greater
	%a <- %a - %b
	call @printResult(%a, %b)
	call @findGCD(%a, %b)
	br :Finished

	:Lesser
	%b <- %b - %a
	call @printResult(%a, %b)
	call @findGCD(%a, %b)
	br :Finished

	:Equal
	call @printResult(%a, %b)
	br :Finished

	:Finished
	return 
}

define void @printResult(int64 %a, int64 %b) {
	:Entrypoint
	%a <- %a << 1
	%a <- %a + 1
	call print(%a)

	%b <- %b << 1
	%b <- %b + 1
	call print(%b)

	return
}
