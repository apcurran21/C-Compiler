// calculates (and prints) the 20th term of the fibonacci sequence
// with fib(0) = fib(1) = 1

define void @main(){
        :entry
        int64 %n
        int64 %result
        %n <- 20
        %result <- call @fib(%n)
        %result <- %result << 1
        %result <- %result + 1
        call print(%result)
        return
}

define int64 @fib(int64 %n){
        :entry
        int64 %not_base
        int64 %n_sub_1
        int64 %fib_n_sub1
        int64 %n_sub_2
        int64 %fib_n_sub_2
        int64 %result
        %not_base <- %n > 1
        br %not_base :recurse :base

        :base
        return 1

        :recurse
        %n_sub_1 <- %n - 1
        %fib_n_sub1 <- call @fib(%n_sub_1)
        %n_sub_2 <- %n - 2
        %fib_n_sub_2 <- call @fib(%n_sub_2)
        %result <- %fib_n_sub1 + %fib_n_sub_2
        return %result
}
