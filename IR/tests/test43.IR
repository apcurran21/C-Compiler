// This test deals with some comparisons 
// prints 1 \n 0
define void @main () {
    :entry
    call @buildASandwich(1,0)
    return
}
define void @buildASandwich(int64 %cheese, int64 %meat) {
    :entry
    
    int64 %isHavarti
    int64 %isSalami

    // Choose cheese
    %isHavarti <- %cheese = 1
    br %isHavarti :havarti :swiss

    //swiss
    :swiss
    call @swissChoice()
    br :cheese_ret

    //havarti
    :havarti
    call @havartiChoice()
    br :cheese_ret

    :cheese_ret

    // Choose meat
    %isSalami <- %meat = 1
    br %isSalami :salami :turkey

    //turkey
    :turkey
    call @turkeyChoice()
    br :meat_ret

    //salami
    :salami
    call @salamiChoice()
    br :meat_ret

    :meat_ret
    return
}
define void @havartiChoice() {
    :entry
    call print(3)
    return
}
define void @swissChoice() {
    :entry
    call print(1)
    return
}

define void @salamiChoice() {
    :entry
    call print(3)
    return
}

define void @turkeyChoice() {
    :entry
    call print(1)
    return
}

