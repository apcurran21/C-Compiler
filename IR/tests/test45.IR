// prints 34 with recursion 
define void @main () {
    :entry
    int64 %ret

    %ret <- call @func1(0)
    call print(%ret)
    return
}

define int64 @func1(int64 %v1) {
    :entry
    int64 %ret
    %v1 <- %v1 + 10
    %ret <- call @func2(%v1)
    return %ret
}

define int64 @func2(int64 %v1) {
    :entry
    int64 %ret
    %v1 <- %v1 + 20
    %ret <- call @func3(%v1)
    return %ret
}

define int64 @func3(int64 %v1) {
    :entry
    int64 %ret
    %v1 <- %v1 + 30
    %ret <- call @recurse(%v1, 9)
    return %ret
}

define int64 @recurse(int64 %v1, int64 %num) {
    :entry
    int64 %done
    int64 %ret

    %v1 <- %v1 + 1
    %num <- %num - 1
    %done <- %num = 0
    br %done :done :notDone
    :notDone

    %ret <- call @recurse(%v1, %num)
    return %ret

    :done
    return %v1
}
